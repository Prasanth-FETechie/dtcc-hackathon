{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useSearchParams, useLocation, useNavigate } from 'react-router';\nimport { AppProvider } from \"../AppProvider/AppProvider.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ReactRouterAppProvider(props) {\n  const {\n    pathname\n  } = useLocation();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const navigateImpl = React.useCallback((url, {\n    history = 'auto'\n  } = {}) => {\n    if (history === 'auto' || history === 'push') {\n      return navigate(url);\n    }\n    if (history === 'replace') {\n      return navigate(url, {\n        replace: true\n      });\n    }\n    throw new Error(`Invalid history option: ${history}`);\n  }, [navigate]);\n  const routerImpl = React.useMemo(() => ({\n    pathname,\n    searchParams,\n    navigate: navigateImpl\n  }), [pathname, searchParams, navigateImpl]);\n  return /*#__PURE__*/_jsx(AppProvider, {\n    router: routerImpl,\n    ...props\n  });\n}\nexport { ReactRouterAppProvider, /** TODO: Old usage, remove export from v0.14.0 */\n/** @deprecated Import `ReactRouterAppProvider` instead. */\nReactRouterAppProvider as AppProvider };","map":{"version":3,"names":["React","useSearchParams","useLocation","useNavigate","AppProvider","jsx","_jsx","ReactRouterAppProvider","props","pathname","searchParams","navigate","navigateImpl","useCallback","url","history","replace","Error","routerImpl","useMemo","router"],"sources":["C:/Users/patna/NewGit/dtcc-hackathon/node_modules/@toolpad/core/react-router/ReactRouterAppProvider.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport { useSearchParams, useLocation, useNavigate } from 'react-router';\r\nimport { AppProvider } from \"../AppProvider/AppProvider.js\";\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nfunction ReactRouterAppProvider(props) {\r\n  const {\r\n    pathname\r\n  } = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const navigateImpl = React.useCallback((url, {\r\n    history = 'auto'\r\n  } = {}) => {\r\n    if (history === 'auto' || history === 'push') {\r\n      return navigate(url);\r\n    }\r\n    if (history === 'replace') {\r\n      return navigate(url, {\r\n        replace: true\r\n      });\r\n    }\r\n    throw new Error(`Invalid history option: ${history}`);\r\n  }, [navigate]);\r\n  const routerImpl = React.useMemo(() => ({\r\n    pathname,\r\n    searchParams,\r\n    navigate: navigateImpl\r\n  }), [pathname, searchParams, navigateImpl]);\r\n  return /*#__PURE__*/_jsx(AppProvider, {\r\n    router: routerImpl,\r\n    ...props\r\n  });\r\n}\r\nexport { ReactRouterAppProvider, /** TODO: Old usage, remove export from v0.14.0 */\r\n/** @deprecated Import `ReactRouterAppProvider` instead. */\r\nReactRouterAppProvider as AppProvider };"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,EAAEC,WAAW,EAAEC,WAAW,QAAQ,cAAc;AACxE,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EACrC,MAAM;IACJC;EACF,CAAC,GAAGP,WAAW,CAAC,CAAC;EACjB,MAAM,CAACQ,YAAY,CAAC,GAAGT,eAAe,CAAC,CAAC;EACxC,MAAMU,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,YAAY,GAAGZ,KAAK,CAACa,WAAW,CAAC,CAACC,GAAG,EAAE;IAC3CC,OAAO,GAAG;EACZ,CAAC,GAAG,CAAC,CAAC,KAAK;IACT,IAAIA,OAAO,KAAK,MAAM,IAAIA,OAAO,KAAK,MAAM,EAAE;MAC5C,OAAOJ,QAAQ,CAACG,GAAG,CAAC;IACtB;IACA,IAAIC,OAAO,KAAK,SAAS,EAAE;MACzB,OAAOJ,QAAQ,CAACG,GAAG,EAAE;QACnBE,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IACA,MAAM,IAAIC,KAAK,CAAC,2BAA2BF,OAAO,EAAE,CAAC;EACvD,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EACd,MAAMO,UAAU,GAAGlB,KAAK,CAACmB,OAAO,CAAC,OAAO;IACtCV,QAAQ;IACRC,YAAY;IACZC,QAAQ,EAAEC;EACZ,CAAC,CAAC,EAAE,CAACH,QAAQ,EAAEC,YAAY,EAAEE,YAAY,CAAC,CAAC;EAC3C,OAAO,aAAaN,IAAI,CAACF,WAAW,EAAE;IACpCgB,MAAM,EAAEF,UAAU;IAClB,GAAGV;EACL,CAAC,CAAC;AACJ;AACA,SAASD,sBAAsB,EAAE;AACjC;AACAA,sBAAsB,IAAIH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}