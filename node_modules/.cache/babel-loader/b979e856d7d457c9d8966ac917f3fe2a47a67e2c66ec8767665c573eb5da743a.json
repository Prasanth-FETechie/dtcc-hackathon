{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { extractEventHandlers } from \"../utils/extractEventHandlers.js\";\nimport { ListActionTypes } from \"./listActions.types.js\";\nimport { ListContext } from \"./ListContext.js\";\n\n/**\r\n * Contains the logic for an item of a list-like component (for example Select, Menu, etc.).\r\n * It handles the item's mouse events and tab index.\r\n *\r\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\r\n * @ignore - internal hook.\r\n */\nexport function useListItem(parameters) {\n  const {\n    handlePointerOverEvents = false,\n    item\n  } = parameters;\n  const listContext = React.useContext(ListContext);\n  if (!listContext) {\n    throw new Error('useListItem must be used within a ListProvider');\n  }\n  const {\n    dispatch,\n    getItemState\n  } = listContext;\n  const {\n    highlighted,\n    selected,\n    focusable\n  } = getItemState(item);\n  const createHandleClick = React.useCallback(externalHandlers => event => {\n    externalHandlers.onClick?.(event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n    dispatch({\n      type: ListActionTypes.itemClick,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\n    externalHandlers.onMouseOver?.(event);\n    if (event.defaultPrevented) {\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (item === undefined) {\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\n      }\n    }\n    dispatch({\n      type: ListActionTypes.itemHover,\n      item: item,\n      event\n    });\n  }, [dispatch, item]);\n  let tabIndex;\n  if (focusable) {\n    tabIndex = highlighted ? 0 : -1;\n  }\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return {\n      ...externalProps,\n      onClick: createHandleClick(externalEventHandlers),\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\n      tabIndex\n    };\n  };\n  return {\n    getRootProps,\n    highlighted,\n    selected\n  };\n}","map":{"version":3,"names":["React","extractEventHandlers","ListActionTypes","ListContext","useListItem","parameters","handlePointerOverEvents","item","listContext","useContext","Error","dispatch","getItemState","highlighted","selected","focusable","createHandleClick","useCallback","externalHandlers","event","onClick","defaultPrevented","process","env","NODE_ENV","undefined","join","type","itemClick","createHandlePointerOver","onMouseOver","itemHover","tabIndex","getRootProps","externalProps","externalEventHandlers","onPointerOver"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/node_modules/@mui/base/useList/useListItem.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport { extractEventHandlers } from \"../utils/extractEventHandlers.js\";\r\nimport { ListActionTypes } from \"./listActions.types.js\";\r\nimport { ListContext } from \"./ListContext.js\";\r\n\r\n/**\r\n * Contains the logic for an item of a list-like component (for example Select, Menu, etc.).\r\n * It handles the item's mouse events and tab index.\r\n *\r\n * @template ItemValue The type of the item's value. This should be consistent with the type of useList's `items` parameter.\r\n * @ignore - internal hook.\r\n */\r\nexport function useListItem(parameters) {\r\n  const {\r\n    handlePointerOverEvents = false,\r\n    item\r\n  } = parameters;\r\n  const listContext = React.useContext(ListContext);\r\n  if (!listContext) {\r\n    throw new Error('useListItem must be used within a ListProvider');\r\n  }\r\n  const {\r\n    dispatch,\r\n    getItemState\r\n  } = listContext;\r\n  const {\r\n    highlighted,\r\n    selected,\r\n    focusable\r\n  } = getItemState(item);\r\n  const createHandleClick = React.useCallback(externalHandlers => event => {\r\n    externalHandlers.onClick?.(event);\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (item === undefined) {\r\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\r\n      }\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.itemClick,\r\n      item: item,\r\n      event\r\n    });\r\n  }, [dispatch, item]);\r\n  const createHandlePointerOver = React.useCallback(externalHandlers => event => {\r\n    externalHandlers.onMouseOver?.(event);\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (item === undefined) {\r\n        throw new Error(['MUI: The `item` provided to useListItem() is undefined.', 'This should happen only during server-side rendering under React 17.'].join('\\n'));\r\n      }\r\n    }\r\n    dispatch({\r\n      type: ListActionTypes.itemHover,\r\n      item: item,\r\n      event\r\n    });\r\n  }, [dispatch, item]);\r\n  let tabIndex;\r\n  if (focusable) {\r\n    tabIndex = highlighted ? 0 : -1;\r\n  }\r\n  const getRootProps = (externalProps = {}) => {\r\n    const externalEventHandlers = extractEventHandlers(externalProps);\r\n    return {\r\n      ...externalProps,\r\n      onClick: createHandleClick(externalEventHandlers),\r\n      onPointerOver: handlePointerOverEvents ? createHandlePointerOver(externalEventHandlers) : undefined,\r\n      tabIndex\r\n    };\r\n  };\r\n  return {\r\n    getRootProps,\r\n    highlighted,\r\n    selected\r\n  };\r\n}"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,oBAAoB,QAAQ,kCAAkC;AACvE,SAASC,eAAe,QAAQ,wBAAwB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,UAAU,EAAE;EACtC,MAAM;IACJC,uBAAuB,GAAG,KAAK;IAC/BC;EACF,CAAC,GAAGF,UAAU;EACd,MAAMG,WAAW,GAAGR,KAAK,CAACS,UAAU,CAACN,WAAW,CAAC;EACjD,IAAI,CAACK,WAAW,EAAE;IAChB,MAAM,IAAIE,KAAK,CAAC,gDAAgD,CAAC;EACnE;EACA,MAAM;IACJC,QAAQ;IACRC;EACF,CAAC,GAAGJ,WAAW;EACf,MAAM;IACJK,WAAW;IACXC,QAAQ;IACRC;EACF,CAAC,GAAGH,YAAY,CAACL,IAAI,CAAC;EACtB,MAAMS,iBAAiB,GAAGhB,KAAK,CAACiB,WAAW,CAACC,gBAAgB,IAAIC,KAAK,IAAI;IACvED,gBAAgB,CAACE,OAAO,GAAGD,KAAK,CAAC;IACjC,IAAIA,KAAK,CAACE,gBAAgB,EAAE;MAC1B;IACF;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAIjB,IAAI,KAAKkB,SAAS,EAAE;QACtB,MAAM,IAAIf,KAAK,CAAC,CAAC,yDAAyD,EAAE,sEAAsE,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC,CAAC;MACjK;IACF;IACAf,QAAQ,CAAC;MACPgB,IAAI,EAAEzB,eAAe,CAAC0B,SAAS;MAC/BrB,IAAI,EAAEA,IAAI;MACVY;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,QAAQ,EAAEJ,IAAI,CAAC,CAAC;EACpB,MAAMsB,uBAAuB,GAAG7B,KAAK,CAACiB,WAAW,CAACC,gBAAgB,IAAIC,KAAK,IAAI;IAC7ED,gBAAgB,CAACY,WAAW,GAAGX,KAAK,CAAC;IACrC,IAAIA,KAAK,CAACE,gBAAgB,EAAE;MAC1B;IACF;IACA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IAAIjB,IAAI,KAAKkB,SAAS,EAAE;QACtB,MAAM,IAAIf,KAAK,CAAC,CAAC,yDAAyD,EAAE,sEAAsE,CAAC,CAACgB,IAAI,CAAC,IAAI,CAAC,CAAC;MACjK;IACF;IACAf,QAAQ,CAAC;MACPgB,IAAI,EAAEzB,eAAe,CAAC6B,SAAS;MAC/BxB,IAAI,EAAEA,IAAI;MACVY;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,QAAQ,EAAEJ,IAAI,CAAC,CAAC;EACpB,IAAIyB,QAAQ;EACZ,IAAIjB,SAAS,EAAE;IACbiB,QAAQ,GAAGnB,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;EACjC;EACA,MAAMoB,YAAY,GAAGA,CAACC,aAAa,GAAG,CAAC,CAAC,KAAK;IAC3C,MAAMC,qBAAqB,GAAGlC,oBAAoB,CAACiC,aAAa,CAAC;IACjE,OAAO;MACL,GAAGA,aAAa;MAChBd,OAAO,EAAEJ,iBAAiB,CAACmB,qBAAqB,CAAC;MACjDC,aAAa,EAAE9B,uBAAuB,GAAGuB,uBAAuB,CAACM,qBAAqB,CAAC,GAAGV,SAAS;MACnGO;IACF,CAAC;EACH,CAAC;EACD,OAAO;IACLC,YAAY;IACZpB,WAAW;IACXC;EACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}