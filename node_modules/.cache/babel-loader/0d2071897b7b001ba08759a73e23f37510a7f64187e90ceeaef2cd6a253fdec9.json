{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinee\\\\OneDrive\\\\Desktop\\\\DTCC Hackathon\\\\dtcc-ai-ui\\\\dtcc-hackathon\\\\src\\\\views\\\\Report.jsx\",\n  _s = $RefreshSig$();\n// import { Box, Typography, Card } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import Highcharts from \"highcharts\";\n// import HighchartsReact from \"highcharts-react-official\";\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// function Report() {\n//   const [chartOptions, setChartOptions] = useState(null);\n//   const [insights, setInsights] = useState(\"\");\n\n//   const handleChatSubmit = async (input) => {\n//     try {\n//       const response = await axios.post(\n//         \"https://si8zczq3z3.execute-api.us-west-2.amazonaws.com/dummyReport\",\n//         { query: input }\n//       );\n\n//       if (response.data?.highcharts_code) {\n//         console.log(response);\n\n//         const highchartsCode = response.data.highcharts_code.replace(\"const options = \", \"\");\n\n//         const st = highchartsCode.replaceAll(\"\\n\", \"\")\n//         const newString = st.replace(';', \"\")\n\n//         const parsedOptions = eval(`(${newString})`);\n//         setChartOptions(parsedOptions);\n//       }\n\n//       if (response.data?.insights) {\n//         setInsights(response.data.insights);\n//       }\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-end\" }}>\n//       {chartOptions && (\n//         <Card sx={{ p: 2, mb: 2 }}>\n//           <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n//           {insights && <Typography sx={{ mt: 2 }}>{insights}</Typography>}\n//         </Card>\n//       )}\n//       <Box sx={{ p: 3 }}>\n//         <Typography variant=\"h5\">Report</Typography>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default Report;\n\n// // Questions\n// Which companies have EPS of exactly 5?\n\nimport { Box, Typography, Card, Divider, Button } from \"@mui/material\";\nimport Chatbot from \"../components/Chatbot\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport { PictureAsPdf as PdfIcon } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Report() {\n  _s();\n  const [responses, setResponses] = useState([]);\n  const handleChatSubmit = async input => {\n    try {\n      var _response$data;\n      const response = await axios.post(\"https://si8zczq3z3.execute-api.us-west-2.amazonaws.com/dummyReport\", {\n        query: input\n      });\n      if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.highcharts_code) {\n        var _response$data2;\n        console.log(response);\n        const highchartsCode = response.data.highcharts_code.replace(\"const options = \", \"\").replaceAll(\"\\n\", \"\").replace(\";\", \"\");\n        const parsedOptions = eval(`(${highchartsCode})`);\n        const newResponse = {\n          chartOptions: parsedOptions,\n          insights: ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.insights) || \"\"\n        };\n        setResponses(prev => [...prev, newResponse]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleDownloadReport = () => {\n    const doc = new jsPDF();\n    let yOffset = 10;\n    responses.forEach((res, index) => {\n      doc.text(`Report ${index + 1}`, 10, yOffset);\n      yOffset += 10;\n      doc.text(res.insights, 10, yOffset, {\n        maxWidth: 180\n      });\n      yOffset += 30;\n    });\n    doc.save(\"report.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"100vh\",\n      padding: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-end\",\n      overflowY: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowY: \"scroll\"\n      },\n      children: responses.map((res, index) => /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          mb: 2,\n          overflowY: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(HighchartsReact, {\n          highcharts: Highcharts,\n          options: res.chartOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            p: 2\n          },\n          children: res.insights\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 2,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [responses.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(PdfIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 49\n        }, this),\n        onClick: handleDownloadReport,\n        sx: {\n          mt: 2,\n          float: 'right',\n          wi\n        },\n        children: \"Download Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chatbot, {\n        onChatSubmit: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Report, \"vMQZFOHJbpBfbx+C6jBQHAS5iO4=\");\n_c = Report;\nexport default Report;\nvar _c;\n$RefreshReg$(_c, \"Report\");","map":{"version":3,"names":["Box","Typography","Card","Divider","Button","Chatbot","Highcharts","HighchartsReact","useState","axios","jsPDF","PictureAsPdf","PdfIcon","jsxDEV","_jsxDEV","Report","_s","responses","setResponses","handleChatSubmit","input","_response$data","response","post","query","data","highcharts_code","_response$data2","console","log","highchartsCode","replace","replaceAll","parsedOptions","eval","newResponse","chartOptions","insights","prev","error","handleDownloadReport","doc","yOffset","forEach","res","index","text","maxWidth","save","sx","height","padding","display","flexDirection","justifyContent","overflowY","children","map","mb","highcharts","options","fileName","_jsxFileName","lineNumber","columnNumber","p","marginTop","length","variant","startIcon","onClick","mt","float","wi","onChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/src/views/Report.jsx"],"sourcesContent":["// import { Box, Typography, Card } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import Highcharts from \"highcharts\";\r\n// import HighchartsReact from \"highcharts-react-official\";\r\n// import { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// function Report() {\r\n//   const [chartOptions, setChartOptions] = useState(null);\r\n//   const [insights, setInsights] = useState(\"\");\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     try {\r\n//       const response = await axios.post(\r\n//         \"https://si8zczq3z3.execute-api.us-west-2.amazonaws.com/dummyReport\",\r\n//         { query: input }\r\n//       );\r\n\r\n//       if (response.data?.highcharts_code) {\r\n//         console.log(response);\r\n        \r\n//         const highchartsCode = response.data.highcharts_code.replace(\"const options = \", \"\");\r\n        \r\n//         const st = highchartsCode.replaceAll(\"\\n\", \"\")\r\n//         const newString = st.replace(';', \"\")\r\n        \r\n//         const parsedOptions = eval(`(${newString})`);\r\n//         setChartOptions(parsedOptions);\r\n//       }\r\n      \r\n//       if (response.data?.insights) {\r\n//         setInsights(response.data.insights);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-end\" }}>\r\n//       {chartOptions && (\r\n//         <Card sx={{ p: 2, mb: 2 }}>\r\n//           <HighchartsReact highcharts={Highcharts} options={chartOptions} />\r\n//           {insights && <Typography sx={{ mt: 2 }}>{insights}</Typography>}\r\n//         </Card>\r\n//       )}\r\n//       <Box sx={{ p: 3 }}>\r\n//         <Typography variant=\"h5\">Report</Typography>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Report;\r\n\r\n// // Questions\r\n// Which companies have EPS of exactly 5?\r\n\r\n\r\nimport { Box, Typography, Card, Divider, Button } from \"@mui/material\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport jsPDF from \"jspdf\";\r\nimport { PictureAsPdf as PdfIcon } from \"@mui/icons-material\";\r\n\r\nfunction Report() {\r\n  const [responses, setResponses] = useState([]);\r\n\r\n  const handleChatSubmit = async (input) => {\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://si8zczq3z3.execute-api.us-west-2.amazonaws.com/dummyReport\",\r\n        { query: input }\r\n      );\r\n      \r\n      if (response.data?.highcharts_code) {\r\n        console.log(response);\r\n        const highchartsCode = response.data.highcharts_code.replace(\"const options = \", \"\").replaceAll(\"\\n\", \"\").replace(\";\", \"\");\r\n        const parsedOptions = eval(`(${highchartsCode})`);\r\n        \r\n        const newResponse = {\r\n          chartOptions: parsedOptions,\r\n          insights: response.data?.insights || \"\",\r\n        };\r\n        setResponses((prev) => [...prev, newResponse]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDownloadReport = () => {\r\n    const doc = new jsPDF();\r\n    let yOffset = 10;\r\n    responses.forEach((res, index) => {\r\n      doc.text(`Report ${index + 1}`, 10, yOffset);\r\n      yOffset += 10;\r\n      doc.text(res.insights, 10, yOffset, { maxWidth: 180 });\r\n      yOffset += 30;\r\n    });\r\n    doc.save(\"report.pdf\");\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: \"100vh\", padding: 2, display: \"flex\", flexDirection: \"column\", justifyContent: \"flex-end\", overflowY: \"auto\" }}>\r\n      <Box sx={{ overflowY: \"scroll\" }}>\r\n        {responses.map((res, index) => (\r\n            <Card key={index} sx={{ mb: 2, overflowY: \"auto\" }}>\r\n                <HighchartsReact highcharts={Highcharts} options={res.chartOptions} />\r\n                    <Divider />\r\n                <Typography sx={{p: 2}}>{res.insights}</Typography>\r\n            </Card>\r\n        ))}\r\n      </Box>\r\n      <Box sx={{ marginTop: 2, display: 'flex', flexDirection: 'column' }}>\r\n        {responses.length > 0 && (\r\n          <Button variant=\"outlined\" startIcon={<PdfIcon />} onClick={handleDownloadReport} sx={{ mt: 2, float: 'right', wi }}>\r\n            Download Report\r\n          </Button>\r\n        )}\r\n        <Chatbot onChatSubmit={handleChatSubmit} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Report;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}