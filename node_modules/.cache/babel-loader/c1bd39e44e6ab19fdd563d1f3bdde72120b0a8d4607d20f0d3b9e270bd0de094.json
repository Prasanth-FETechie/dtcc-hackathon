{"ast":null,"code":"// import { Box, Typography, Button, Fab } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import Card from \"../layouts/cards\";\n// import { useState, useEffect } from \"react\";\n// import Cards from \"../layouts/cards\";\n// import DocumentCard from \"../layouts/cards\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   // Extracting the docs array from the location state\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [expanded, setExpanded] = useState(false);\n//   const [showDoc, setShowDoc] = useState(false);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [existingData, setExistingData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState([]);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           //   setHeaders(Object.keys(response.data.body.companies[0]))\n//           //   setApiData(response.data.body.companies);\n//           setExistingData(response.data.body.companies)\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds)\n//   }, []);\n\n//   const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\n//     companyId,\n//     ...data\n//   }));\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data)\n//       console.log(response)\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     const companys = JSON.parse(sessionStorage.getItem(\"rows\"))\n//     // navigate('/analyze', { state: { docs: {company_id: companys[0].companyId, query: input} } }); \n//     // Axios api with analyze format\n//   };\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       {/* <Typography variant=\"h5\">Extract</Typography> */}\n//       {/* First Section (70%) */}\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           {/* Left Section */}\n//           <MarketTable data={existingData} title=\"\" id=\"view\"/>\n//           <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\n//         </Box>\n\n//         <Fab color=\"primary\" onClick={() => {}} sx={{ position: 'fixed',\n//               bottom: 110,  // Distance from bottom\n//               right: 40,    // Distance from left side\n//               zIndex: 1000,  // Ensure the button is above other content\n//           }}>\n//             <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n//       </Box>\n//       {/* Second Section (30%) */}\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n// export default Extract;\n\n// import { Box, Typography, Button, Fab, Popover } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n// import { useState, useEffect } from \"react\";\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [existingData, setExistingData] = useState([]);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState([]);\n//   const [anchorEl, setAnchorEl] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           setExistingData(response.data.body.companies);\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds);\n//   }, []);\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     try {\n//       const inputObject = {\n//         company_id : JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n//         query : input\n//       }\n\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n//         //   setHeaders(Object.keys(response.data.body.companies[0]))\n//         //   setApiData(response.data.body.companies);\n//         console.log(response.data)\n//       //   setExistingData(response.data.body.companies)\n\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleFabClick = (event) => {\n//     setAnchorEl(anchorEl ? null : event.currentTarget);\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const open = Boolean(anchorEl);\n//   const id = open ? \"fab-popover\" : undefined;\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\n//         </Box>\n\n//         <Fab color=\"primary\" onClick={handleFabClick} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n\n//         {/* Popover positioned to the left of Fab */}\n//         <Popover \n//           id={id}\n//           open={open}\n//           anchorEl={anchorEl}\n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\n//           sx={{ marginRight: 2, borderRadius: 20 }}\n//         >\n//           <Box sx={{ padding: 2, width: '500px', height: '600px' }}>\n//             <Typography variant=\"h6\">Popup Content</Typography>\n//             <Typography variant=\"body2\">This is the popup that appears to the left of the Fab.</Typography>\n//           </Box>\n//         </Popover>\n//       </Box>\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default Extract;\n\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, Divider } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n// import { useState, useEffect, useRef } from \"react\";\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [existingData, setExistingData] = useState([]);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState(\"\");\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const [responseDataList, setResponseDataList] = useState([]);\n//   const fabRef = useRef(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           setExistingData(response.data.body.companies);\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds);\n//   }, []);\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     try {\n//       const inputObject = {\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n//         query: input\n//       };\n\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\n//       setAnchorEl(fabRef.current);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const open = Boolean(anchorEl);\n//   const id = open ? \"fab-popover\" : undefined;\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\n//         </Box>\n\n//         <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n\n//         {/* Popover containing response cards */}\n//         <Popover \n//           id={id}\n//           open={open}\n//           anchorEl={anchorEl}\n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\n//           sx={{ marginRight: 2, borderRadius: 20 }}\n//         >\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: '#edede9' }}>\n//             {responseDataList.map((responseItem, index) => (\n//               <Card key={index} sx={{ marginBottom: 2 }}>\n//                 <CardHeader title={responseItem.query} />\n//                 <Divider />\n//                 <CardContent>\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\n//                 </CardContent>\n//                 <Divider />\n//                 <CardActions sx={{ display: 'flex', flexDirection: 'column' }}>\n//                   {responseItem.data.documents.map((doc, docIndex) => (\n//                     <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\n//                       <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\n//                       <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\n//                     </Card>\n//                   ))}\n//                 </CardActions>\n//               </Card>\n//             ))}\n//           </Box>\n//         </Popover>\n//       </Box>\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default Extract;","map":{"version":3,"names":[],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["// import { Box, Typography, Button, Fab } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import Card from \"../layouts/cards\";\r\n// import { useState, useEffect } from \"react\";\r\n// import Cards from \"../layouts/cards\";\r\n// import DocumentCard from \"../layouts/cards\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   // Extracting the docs array from the location state\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [expanded, setExpanded] = useState(false);\r\n//   const [showDoc, setShowDoc] = useState(false);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState([]);\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n//           //   setApiData(response.data.body.companies);\r\n//           setExistingData(response.data.body.companies)\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds)\r\n//   }, []);\r\n\r\n\r\n//   const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\r\n//     companyId,\r\n//     ...data\r\n//   }));\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data)\r\n//       console.log(response)\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     const companys = JSON.parse(sessionStorage.getItem(\"rows\"))\r\n//     // navigate('/analyze', { state: { docs: {company_id: companys[0].companyId, query: input} } }); \r\n//     // Axios api with analyze format\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       {/* <Typography variant=\"h5\">Extract</Typography> */}\r\n//       {/* First Section (70%) */}\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           {/* Left Section */}\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\"/>\r\n//           <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\r\n//         </Box>\r\n\r\n//         <Fab color=\"primary\" onClick={() => {}} sx={{ position: 'fixed',\r\n//               bottom: 110,  // Distance from bottom\r\n//               right: 40,    // Distance from left side\r\n//               zIndex: 1000,  // Ensure the button is above other content\r\n//           }}>\r\n//             <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n//       </Box>\r\n//       {/* Second Section (30%) */}\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n// export default Extract;\r\n\r\n\r\n// import { Box, Typography, Button, Fab, Popover } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n// import { useState, useEffect } from \"react\";\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState([]);\r\n//   const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           setExistingData(response.data.body.companies);\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds);\r\n//   }, []);\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     try {\r\n//       const inputObject = {\r\n//         company_id : JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n//         query : input\r\n//       }\r\n      \r\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n//         //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n//         //   setApiData(response.data.body.companies);\r\n//         console.log(response.data)\r\n//       //   setExistingData(response.data.body.companies)\r\n      \r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFabClick = (event) => {\r\n//     setAnchorEl(anchorEl ? null : event.currentTarget);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? \"fab-popover\" : undefined;\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n//         </Box>\r\n\r\n//         <Fab color=\"primary\" onClick={handleFabClick} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n\r\n//         {/* Popover positioned to the left of Fab */}\r\n//         <Popover \r\n//           id={id}\r\n//           open={open}\r\n//           anchorEl={anchorEl}\r\n//           onClose={handleClose}\r\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n//           sx={{ marginRight: 2, borderRadius: 20 }}\r\n//         >\r\n//           <Box sx={{ padding: 2, width: '500px', height: '600px' }}>\r\n//             <Typography variant=\"h6\">Popup Content</Typography>\r\n//             <Typography variant=\"body2\">This is the popup that appears to the left of the Fab.</Typography>\r\n//           </Box>\r\n//         </Popover>\r\n//       </Box>\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Extract;\r\n\r\n\r\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, Divider } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n// import { useState, useEffect, useRef } from \"react\";\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState(\"\");\r\n//   const [anchorEl, setAnchorEl] = useState(null);\r\n//   const [responseDataList, setResponseDataList] = useState([]);\r\n//   const fabRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           setExistingData(response.data.body.companies);\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds);\r\n//   }, []);\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     try {\r\n//       const inputObject = {\r\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n//         query: input\r\n//       };\r\n      \r\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n//       setAnchorEl(fabRef.current);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? \"fab-popover\" : undefined;\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n//         </Box>\r\n\r\n//         <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n\r\n//         {/* Popover containing response cards */}\r\n//         <Popover \r\n//           id={id}\r\n//           open={open}\r\n//           anchorEl={anchorEl}\r\n//           onClose={handleClose}\r\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n//           sx={{ marginRight: 2, borderRadius: 20 }}\r\n//         >\r\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: '#edede9' }}>\r\n//             {responseDataList.map((responseItem, index) => (\r\n//               <Card key={index} sx={{ marginBottom: 2 }}>\r\n//                 <CardHeader title={responseItem.query} />\r\n//                 <Divider />\r\n//                 <CardContent>\r\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n//                 </CardContent>\r\n//                 <Divider />\r\n//                 <CardActions sx={{ display: 'flex', flexDirection: 'column' }}>\r\n//                   {responseItem.data.documents.map((doc, docIndex) => (\r\n//                     <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\r\n//                       <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n//                       <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\r\n//                     </Card>\r\n//                   ))}\r\n//                 </CardActions>\r\n//               </Card>\r\n//             ))}\r\n//           </Box>\r\n//         </Popover>\r\n//       </Box>\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Extract;\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}