{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from \"../utils/index.js\";\nimport { unstable_composeClasses as composeClasses } from \"../composeClasses/index.js\";\nimport { isHostComponent } from \"../utils/isHostComponent.js\";\nimport { TablePaginationActions } from \"./TablePaginationActions.js\";\nimport { getTablePaginationUtilityClass } from \"./tablePaginationClasses.js\";\nimport { useClassNamesOverride } from \"../utils/ClassNameConfigurator.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));\n};\n\n/**\r\n * A pagination for tables.\r\n *\r\n * Demos:\r\n *\r\n * - [Table Pagination](https://mui.com/base-ui/react-table-pagination/)\r\n *\r\n * API:\r\n *\r\n * - [TablePagination API](https://mui.com/base-ui/react-table-pagination/components-api/#table-pagination)\r\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, forwardedRef) {\n  const {\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n  const Root = slots.root ?? 'td';\n  if (Root === 'td' || !isHostComponent(Root)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = slots.select ?? 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: event => onRowsPerPageChange && onRowsPerPageChange(event),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = slots.actions ?? TablePaginationActions;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = slots.menuItem ?? 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = slots.selectLabel ?? 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = slots.displayedRows ?? 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = slots.toolbar ?? 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = slots.spacer ?? 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, {\n    ...rootProps,\n    children: /*#__PURE__*/_jsxs(Toolbar, {\n      ...toolbarProps,\n      children: [/*#__PURE__*/_jsx(Spacer, {\n        ...spacerProps\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, {\n        ...selectLabelProps,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, {\n        ...selectProps,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, {\n          ...menuItemProps,\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }, typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      }), /*#__PURE__*/_jsx(DisplayedRows, {\n        ...displayedRowsProps,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(Actions, {\n        ...actionsProps\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * @ignore\r\n   */\n  colSpan: PropTypes.number,\n  /**\r\n   * The total number of rows.\r\n   *\r\n   * To enable server side pagination for an unknown number of items, provide -1.\r\n   */\n  count: PropTypes.number.isRequired,\n  /**\r\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\r\n   * This is important for screen reader users.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\r\n   * @returns {string}\r\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\r\n   *   return `Go to ${type} page`;\r\n   * }\r\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\r\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\r\n   * object.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\r\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\r\n   * }\r\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\r\n   * Id of the label element within the pagination.\r\n   */\n  labelId: PropTypes.string,\n  /**\r\n   * Customize the rows per page label.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @default 'Rows per page:'\r\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\r\n   * Callback fired when the page is changed.\r\n   *\r\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\r\n   * @param {number} page The page selected.\r\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\r\n   * Callback fired when the number of rows per page is changed.\r\n   *\r\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\r\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\r\n   * The zero-based index of the current page.\r\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\r\n   * The number of rows per page.\r\n   *\r\n   * Set -1 to display all the rows.\r\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\r\n   * Customizes the options of the rows per page select field. If less than two options are\r\n   * available, no select field will be displayed.\r\n   * Use -1 for the value with a custom label to show all the rows.\r\n   * @default [10, 25, 50, 100]\r\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\r\n   * Id of the select element within the pagination.\r\n   */\n  selectId: PropTypes.string,\n  /**\r\n   * The props used for each slot inside the TablePagination.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the TablePagination.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport { TablePagination };","map":{"version":3,"names":["React","PropTypes","unstable_useId","useId","chainPropTypes","integerPropType","useSlotProps","unstable_composeClasses","composeClasses","isHostComponent","TablePaginationActions","getTablePaginationUtilityClass","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","createElement","_createElement","defaultLabelDisplayedRows","from","to","count","defaultGetAriaLabel","type","useUtilityClasses","slots","root","toolbar","spacer","selectLabel","select","input","selectIcon","menuItem","displayedRows","actions","TablePagination","forwardRef","props","forwardedRef","colSpan","colSpanProp","getItemAriaLabel","labelDisplayedRows","labelId","labelIdProp","labelRowsPerPage","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","selectId","selectIdProp","slotProps","other","ownerState","classes","Root","getLabelDisplayedRowsTo","Math","min","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","Select","selectProps","value","id","onChange","event","toString","filter","Boolean","join","undefined","Actions","actionsProps","MenuItem","menuItemProps","SelectLabel","selectLabelProps","DisplayedRows","displayedRowsProps","Toolbar","toolbarProps","Spacer","spacerProps","children","length","map","rowsPerPageOption","key","label","process","env","NODE_ENV","propTypes","number","isRequired","func","string","node","newLastPage","max","ceil","Error","arrayOf","oneOfType","shape","object"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/node_modules/@mui/base/TablePagination/TablePagination.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\r\nimport { useSlotProps } from \"../utils/index.js\";\r\nimport { unstable_composeClasses as composeClasses } from \"../composeClasses/index.js\";\r\nimport { isHostComponent } from \"../utils/isHostComponent.js\";\r\nimport { TablePaginationActions } from \"./TablePaginationActions.js\";\r\nimport { getTablePaginationUtilityClass } from \"./tablePaginationClasses.js\";\r\nimport { useClassNamesOverride } from \"../utils/ClassNameConfigurator.js\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { createElement as _createElement } from \"react\";\r\nfunction defaultLabelDisplayedRows({\r\n  from,\r\n  to,\r\n  count\r\n}) {\r\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\r\n}\r\nfunction defaultGetAriaLabel(type) {\r\n  return `Go to ${type} page`;\r\n}\r\nconst useUtilityClasses = () => {\r\n  const slots = {\r\n    root: ['root'],\r\n    toolbar: ['toolbar'],\r\n    spacer: ['spacer'],\r\n    selectLabel: ['selectLabel'],\r\n    select: ['select'],\r\n    input: ['input'],\r\n    selectIcon: ['selectIcon'],\r\n    menuItem: ['menuItem'],\r\n    displayedRows: ['displayedRows'],\r\n    actions: ['actions']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));\r\n};\r\n\r\n/**\r\n * A pagination for tables.\r\n *\r\n * Demos:\r\n *\r\n * - [Table Pagination](https://mui.com/base-ui/react-table-pagination/)\r\n *\r\n * API:\r\n *\r\n * - [TablePagination API](https://mui.com/base-ui/react-table-pagination/components-api/#table-pagination)\r\n */\r\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, forwardedRef) {\r\n  const {\r\n    colSpan: colSpanProp,\r\n    count,\r\n    getItemAriaLabel = defaultGetAriaLabel,\r\n    labelDisplayedRows = defaultLabelDisplayedRows,\r\n    labelId: labelIdProp,\r\n    labelRowsPerPage = 'Rows per page:',\r\n    onPageChange,\r\n    onRowsPerPageChange,\r\n    page,\r\n    rowsPerPage,\r\n    rowsPerPageOptions = [10, 25, 50, 100],\r\n    selectId: selectIdProp,\r\n    slotProps = {},\r\n    slots = {},\r\n    ...other\r\n  } = props;\r\n  const ownerState = props;\r\n  const classes = useUtilityClasses();\r\n  let colSpan;\r\n  const Root = slots.root ?? 'td';\r\n  if (Root === 'td' || !isHostComponent(Root)) {\r\n    colSpan = colSpanProp || 1000; // col-span over everything\r\n  }\r\n  const getLabelDisplayedRowsTo = () => {\r\n    if (count === -1) {\r\n      return (page + 1) * rowsPerPage;\r\n    }\r\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\r\n  };\r\n  const selectId = useId(selectIdProp);\r\n  const labelId = useId(labelIdProp);\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      colSpan,\r\n      ref: forwardedRef\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  const Select = slots.select ?? 'select';\r\n  const selectProps = useSlotProps({\r\n    elementType: Select,\r\n    externalSlotProps: slotProps.select,\r\n    additionalProps: {\r\n      value: rowsPerPage,\r\n      id: selectId,\r\n      onChange: event => onRowsPerPageChange && onRowsPerPageChange(event),\r\n      'aria-label': rowsPerPage.toString(),\r\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\r\n    },\r\n    ownerState,\r\n    className: classes.select\r\n  });\r\n  const Actions = slots.actions ?? TablePaginationActions;\r\n  const actionsProps = useSlotProps({\r\n    elementType: Actions,\r\n    externalSlotProps: slotProps.actions,\r\n    additionalProps: {\r\n      page,\r\n      rowsPerPage,\r\n      count,\r\n      onPageChange,\r\n      getItemAriaLabel\r\n    },\r\n    ownerState,\r\n    className: classes.actions\r\n  });\r\n  const MenuItem = slots.menuItem ?? 'option';\r\n  const menuItemProps = useSlotProps({\r\n    elementType: MenuItem,\r\n    externalSlotProps: slotProps.menuItem,\r\n    additionalProps: {\r\n      value: undefined\r\n    },\r\n    ownerState,\r\n    className: classes.menuItem\r\n  });\r\n  const SelectLabel = slots.selectLabel ?? 'p';\r\n  const selectLabelProps = useSlotProps({\r\n    elementType: SelectLabel,\r\n    externalSlotProps: slotProps.selectLabel,\r\n    additionalProps: {\r\n      id: labelId\r\n    },\r\n    ownerState,\r\n    className: classes.selectLabel\r\n  });\r\n  const DisplayedRows = slots.displayedRows ?? 'p';\r\n  const displayedRowsProps = useSlotProps({\r\n    elementType: DisplayedRows,\r\n    externalSlotProps: slotProps.displayedRows,\r\n    ownerState,\r\n    className: classes.displayedRows\r\n  });\r\n  const Toolbar = slots.toolbar ?? 'div';\r\n  const toolbarProps = useSlotProps({\r\n    elementType: Toolbar,\r\n    externalSlotProps: slotProps.toolbar,\r\n    ownerState,\r\n    className: classes.toolbar\r\n  });\r\n  const Spacer = slots.spacer ?? 'div';\r\n  const spacerProps = useSlotProps({\r\n    elementType: Spacer,\r\n    externalSlotProps: slotProps.spacer,\r\n    ownerState,\r\n    className: classes.spacer\r\n  });\r\n  return /*#__PURE__*/_jsx(Root, {\r\n    ...rootProps,\r\n    children: /*#__PURE__*/_jsxs(Toolbar, {\r\n      ...toolbarProps,\r\n      children: [/*#__PURE__*/_jsx(Spacer, {\r\n        ...spacerProps\r\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, {\r\n        ...selectLabelProps,\r\n        children: labelRowsPerPage\r\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, {\r\n        ...selectProps,\r\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, {\r\n          ...menuItemProps,\r\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\r\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\r\n        }, typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\r\n      }), /*#__PURE__*/_jsx(DisplayedRows, {\r\n        ...displayedRowsProps,\r\n        children: labelDisplayedRows({\r\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\r\n          to: getLabelDisplayedRowsTo(),\r\n          count: count === -1 ? -1 : count,\r\n          page\r\n        })\r\n      }), /*#__PURE__*/_jsx(Actions, {\r\n        ...actionsProps\r\n      })]\r\n    })\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * @ignore\r\n   */\r\n  colSpan: PropTypes.number,\r\n  /**\r\n   * The total number of rows.\r\n   *\r\n   * To enable server side pagination for an unknown number of items, provide -1.\r\n   */\r\n  count: PropTypes.number.isRequired,\r\n  /**\r\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\r\n   * This is important for screen reader users.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\r\n   * @returns {string}\r\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\r\n   *   return `Go to ${type} page`;\r\n   * }\r\n   */\r\n  getItemAriaLabel: PropTypes.func,\r\n  /**\r\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\r\n   * object.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\r\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\r\n   * }\r\n   */\r\n  labelDisplayedRows: PropTypes.func,\r\n  /**\r\n   * Id of the label element within the pagination.\r\n   */\r\n  labelId: PropTypes.string,\r\n  /**\r\n   * Customize the rows per page label.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\r\n   * @default 'Rows per page:'\r\n   */\r\n  labelRowsPerPage: PropTypes.node,\r\n  /**\r\n   * Callback fired when the page is changed.\r\n   *\r\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\r\n   * @param {number} page The page selected.\r\n   */\r\n  onPageChange: PropTypes.func.isRequired,\r\n  /**\r\n   * Callback fired when the number of rows per page is changed.\r\n   *\r\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\r\n   */\r\n  onRowsPerPageChange: PropTypes.func,\r\n  /**\r\n   * The zero-based index of the current page.\r\n   */\r\n  page: chainPropTypes(integerPropType.isRequired, props => {\r\n    const {\r\n      count,\r\n      page,\r\n      rowsPerPage\r\n    } = props;\r\n    if (count === -1) {\r\n      return null;\r\n    }\r\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\r\n    if (page < 0 || page > newLastPage) {\r\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\r\n    }\r\n    return null;\r\n  }),\r\n  /**\r\n   * The number of rows per page.\r\n   *\r\n   * Set -1 to display all the rows.\r\n   */\r\n  rowsPerPage: integerPropType.isRequired,\r\n  /**\r\n   * Customizes the options of the rows per page select field. If less than two options are\r\n   * available, no select field will be displayed.\r\n   * Use -1 for the value with a custom label to show all the rows.\r\n   * @default [10, 25, 50, 100]\r\n   */\r\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired\r\n  })]).isRequired),\r\n  /**\r\n   * Id of the select element within the pagination.\r\n   */\r\n  selectId: PropTypes.string,\r\n  /**\r\n   * The props used for each slot inside the TablePagination.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\r\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the TablePagination.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    actions: PropTypes.elementType,\r\n    displayedRows: PropTypes.elementType,\r\n    menuItem: PropTypes.elementType,\r\n    root: PropTypes.elementType,\r\n    select: PropTypes.elementType,\r\n    selectLabel: PropTypes.elementType,\r\n    spacer: PropTypes.elementType,\r\n    toolbar: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport { TablePagination };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}