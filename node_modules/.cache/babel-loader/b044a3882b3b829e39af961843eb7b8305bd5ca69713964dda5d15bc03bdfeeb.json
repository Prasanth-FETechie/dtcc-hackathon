{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinee\\\\OneDrive\\\\Desktop\\\\DTCC Hackathon\\\\dtcc-ai-ui\\\\dtcc-hackathon\\\\src\\\\views\\\\Extract.jsx\",\n  _s = $RefreshSig$();\n// import { Box, Typography, Button, Fab } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import Card from \"../layouts/cards\";\n// import { useState, useEffect } from \"react\";\n// import Cards from \"../layouts/cards\";\n// import DocumentCard from \"../layouts/cards\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   // Extracting the docs array from the location state\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [expanded, setExpanded] = useState(false);\n//   const [showDoc, setShowDoc] = useState(false);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [existingData, setExistingData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState([]);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           //   setHeaders(Object.keys(response.data.body.companies[0]))\n//           //   setApiData(response.data.body.companies);\n//           setExistingData(response.data.body.companies)\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds)\n//   }, []);\n\n//   const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\n//     companyId,\n//     ...data\n//   }));\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data)\n//       console.log(response)\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     const companys = JSON.parse(sessionStorage.getItem(\"rows\"))\n//     // navigate('/analyze', { state: { docs: {company_id: companys[0].companyId, query: input} } }); \n//     // Axios api with analyze format\n//   };\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       {/* <Typography variant=\"h5\">Extract</Typography> */}\n//       {/* First Section (70%) */}\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           {/* Left Section */}\n//           <MarketTable data={existingData} title=\"\" id=\"view\"/>\n//           <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\n//         </Box>\n\n//         <Fab color=\"primary\" onClick={() => {}} sx={{ position: 'fixed',\n//               bottom: 110,  // Distance from bottom\n//               right: 40,    // Distance from left side\n//               zIndex: 1000,  // Ensure the button is above other content\n//           }}>\n//             <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n//       </Box>\n//       {/* Second Section (30%) */}\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n// export default Extract;\n\n// import { Box, Typography, Button, Fab, Popover } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n// import { useState, useEffect } from \"react\";\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [existingData, setExistingData] = useState([]);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState([]);\n//   const [anchorEl, setAnchorEl] = useState(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           setExistingData(response.data.body.companies);\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds);\n//   }, []);\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     try {\n//       const inputObject = {\n//         company_id : JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n//         query : input\n//       }\n\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n//         //   setHeaders(Object.keys(response.data.body.companies[0]))\n//         //   setApiData(response.data.body.companies);\n//         console.log(response.data)\n//       //   setExistingData(response.data.body.companies)\n\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleFabClick = (event) => {\n//     setAnchorEl(anchorEl ? null : event.currentTarget);\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const open = Boolean(anchorEl);\n//   const id = open ? \"fab-popover\" : undefined;\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\n//         </Box>\n\n//         <Fab color=\"primary\" onClick={handleFabClick} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n\n//         {/* Popover positioned to the left of Fab */}\n//         <Popover \n//           id={id}\n//           open={open}\n//           anchorEl={anchorEl}\n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\n//           sx={{ marginRight: 2, borderRadius: 20 }}\n//         >\n//           <Box sx={{ padding: 2, width: '500px', height: '600px' }}>\n//             <Typography variant=\"h6\">Popup Content</Typography>\n//             <Typography variant=\"body2\">This is the popup that appears to the left of the Fab.</Typography>\n//           </Box>\n//         </Popover>\n//       </Box>\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default Extract;\n\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, Divider } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n// import { useState, useEffect, useRef } from \"react\";\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [existingData, setExistingData] = useState([]);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState(\"\");\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const [responseDataList, setResponseDataList] = useState([]);\n//   const fabRef = useRef(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           setExistingData(response.data.body.companies);\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds);\n//   }, []);\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     try {\n//       const inputObject = {\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n//         query: input\n//       };\n\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\n//       setAnchorEl(fabRef.current);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const open = Boolean(anchorEl);\n//   const id = open ? \"fab-popover\" : undefined;\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\n//         </Box>\n\n//         <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n\n//         {/* Popover containing response cards */}\n//         <Popover \n//           id={id}\n//           open={open}\n//           anchorEl={anchorEl}\n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\n//           sx={{ marginRight: 2, borderRadius: 20 }}\n//         >\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: '#edede9' }}>\n//             {responseDataList.map((responseItem, index) => (\n//               <Card key={index} sx={{ marginBottom: 2 }}>\n//                 <CardHeader title={responseItem.query} />\n//                 <Divider />\n//                 <CardContent>\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\n//                 </CardContent>\n//                 <Divider />\n//                 <CardActions sx={{ display: 'flex', flexDirection: 'column' }}>\n//                   {responseItem.data.documents.map((doc, docIndex) => (\n//                     <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\n//                       <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\n//                       <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\n//                     </Card>\n//                   ))}\n//                 </CardActions>\n//               </Card>\n//             ))}\n//           </Box>\n//         </Popover>\n//       </Box>\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default Extract;\n\nimport { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport Chatbot from \"../components/Chatbot\";\nimport MarketTable from \"../components/MarketTable\";\nimport Axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Extract() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const extractedDocs = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.docs) || [];\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\n  const [existingData, setExistingData] = useState([]);\n  const [extractedData, setExtractedData] = useState([]);\n  const [chatQuery, setChatQuery] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [responseDataList, setResponseDataList] = useState([]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const fabRef = useRef(null);\n  const [enableAnalyze, setEnableAnalyze] = s;\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    fetchDatas(companyIds);\n  }, []);\n  const fetchDatas = async input => {\n    try {\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", {\n        company_ids: input\n      });\n      setExtractedData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleChatSubmit = async input => {\n    setChatQuery(input);\n    try {\n      const inputObject = {\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n        query: input\n      };\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n      setResponseDataList(prevList => [...prevList, {\n        query: input,\n        data: response.data\n      }]);\n      setAnchorEl(fabRef.current);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const toggleExpand = index => {\n    setExpandedCards(prevState => ({\n      ...prevState,\n      [index]: !prevState[index]\n    }));\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"fab-popover\" : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"85vh\",\n      padding: 2,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 8,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          display: \"flex\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(MarketTable, {\n          data: existingData,\n          title: \"\",\n          id: \"view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarketTable, {\n          data: Object.entries(extractedData).map(([companyId, data]) => ({\n            companyId,\n            ...data\n          })),\n          title: \"\",\n          id: \"extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        ref: fabRef,\n        color: \"primary\",\n        onClick: () => setAnchorEl(fabRef.current),\n        sx: {\n          position: 'fixed',\n          bottom: 110,\n          right: 40,\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(QuestionAnswerRoundedIcon, {\n          titleAccess: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        id: id,\n        open: open,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'center',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'center',\n          horizontal: 'right'\n        },\n        sx: {\n          marginRight: 2,\n          borderRadius: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: 2,\n            width: '650px',\n            height: '600px',\n            overflowY: 'auto',\n            background: \"#edf6f9\"\n          },\n          children: responseDataList.map((responseItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              marginBottom: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: responseItem.query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: responseItem.data.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              sx: {\n                justifyContent: \"flex-end\"\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => toggleExpand(index),\n                children: expandedCards[index] ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: expandedCards[index],\n              timeout: \"auto\",\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: responseItem.data.documents.map((doc, docIndex) => /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    padding: 1,\n                    margin: 1,\n                    boxShadow: 2,\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"bold\",\n                    children: doc.metadata.Document_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    children: doc.metadata._source_uri\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 25\n                  }, this)]\n                }, docIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 2,\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        onChatSubmit: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n}\n_s(Extract, \"jbaAfVUeMebR0rVsNh568lMx4v4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Extract;\nexport default Extract;\nvar _c;\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"names":["Box","Typography","Button","Fab","Popover","Card","CardHeader","CardContent","CardActions","IconButton","Collapse","Divider","ExpandMoreIcon","ExpandLessIcon","Chatbot","MarketTable","Axios","useLocation","useNavigate","QuestionAnswerRoundedIcon","useState","useEffect","useRef","jsxDEV","_jsxDEV","Extract","_s","_location$state","location","navigate","extractedDocs","state","docs","companyIds","map","doc","Company_ID","existingData","setExistingData","extractedData","setExtractedData","chatQuery","setChatQuery","anchorEl","setAnchorEl","responseDataList","setResponseDataList","expandedCards","setExpandedCards","fabRef","enableAnalyze","setEnableAnalyze","s","fetchData","response","get","Array","isArray","data","body","companies","console","warn","error","fetchDatas","input","post","company_ids","handleChatSubmit","inputObject","company_id","JSON","parse","sessionStorage","getItem","companyId","query","prevList","current","handleClose","toggleExpand","index","prevState","open","Boolean","id","undefined","sx","height","padding","display","flexDirection","children","flex","gap","title","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","ref","color","onClick","position","bottom","right","zIndex","titleAccess","onClose","anchorOrigin","vertical","horizontal","transformOrigin","marginRight","borderRadius","width","overflowY","background","responseItem","marginBottom","variant","answer","justifyContent","in","timeout","unmountOnExit","documents","docIndex","margin","boxShadow","fontWeight","metadata","Document_Name","_source_uri","marginTop","onChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["// import { Box, Typography, Button, Fab } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import Card from \"../layouts/cards\";\r\n// import { useState, useEffect } from \"react\";\r\n// import Cards from \"../layouts/cards\";\r\n// import DocumentCard from \"../layouts/cards\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   // Extracting the docs array from the location state\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [expanded, setExpanded] = useState(false);\r\n//   const [showDoc, setShowDoc] = useState(false);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState([]);\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n//           //   setApiData(response.data.body.companies);\r\n//           setExistingData(response.data.body.companies)\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds)\r\n//   }, []);\r\n\r\n\r\n//   const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\r\n//     companyId,\r\n//     ...data\r\n//   }));\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data)\r\n//       console.log(response)\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     const companys = JSON.parse(sessionStorage.getItem(\"rows\"))\r\n//     // navigate('/analyze', { state: { docs: {company_id: companys[0].companyId, query: input} } }); \r\n//     // Axios api with analyze format\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       {/* <Typography variant=\"h5\">Extract</Typography> */}\r\n//       {/* First Section (70%) */}\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           {/* Left Section */}\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\"/>\r\n//           <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\r\n//         </Box>\r\n\r\n//         <Fab color=\"primary\" onClick={() => {}} sx={{ position: 'fixed',\r\n//               bottom: 110,  // Distance from bottom\r\n//               right: 40,    // Distance from left side\r\n//               zIndex: 1000,  // Ensure the button is above other content\r\n//           }}>\r\n//             <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n//       </Box>\r\n//       {/* Second Section (30%) */}\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n// export default Extract;\r\n\r\n\r\n// import { Box, Typography, Button, Fab, Popover } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n// import { useState, useEffect } from \"react\";\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState([]);\r\n//   const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           setExistingData(response.data.body.companies);\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds);\r\n//   }, []);\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     try {\r\n//       const inputObject = {\r\n//         company_id : JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n//         query : input\r\n//       }\r\n      \r\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n//         //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n//         //   setApiData(response.data.body.companies);\r\n//         console.log(response.data)\r\n//       //   setExistingData(response.data.body.companies)\r\n      \r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFabClick = (event) => {\r\n//     setAnchorEl(anchorEl ? null : event.currentTarget);\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? \"fab-popover\" : undefined;\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n//         </Box>\r\n\r\n//         <Fab color=\"primary\" onClick={handleFabClick} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n\r\n//         {/* Popover positioned to the left of Fab */}\r\n//         <Popover \r\n//           id={id}\r\n//           open={open}\r\n//           anchorEl={anchorEl}\r\n//           onClose={handleClose}\r\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n//           sx={{ marginRight: 2, borderRadius: 20 }}\r\n//         >\r\n//           <Box sx={{ padding: 2, width: '500px', height: '600px' }}>\r\n//             <Typography variant=\"h6\">Popup Content</Typography>\r\n//             <Typography variant=\"body2\">This is the popup that appears to the left of the Fab.</Typography>\r\n//           </Box>\r\n//         </Popover>\r\n//       </Box>\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Extract;\r\n\r\n\r\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, Divider } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n// import { useState, useEffect, useRef } from \"react\";\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState(\"\");\r\n//   const [anchorEl, setAnchorEl] = useState(null);\r\n//   const [responseDataList, setResponseDataList] = useState([]);\r\n//   const fabRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           setExistingData(response.data.body.companies);\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds);\r\n//   }, []);\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     try {\r\n//       const inputObject = {\r\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n//         query: input\r\n//       };\r\n      \r\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n//       setAnchorEl(fabRef.current);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? \"fab-popover\" : undefined;\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n//         </Box>\r\n\r\n//         <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n\r\n//         {/* Popover containing response cards */}\r\n//         <Popover \r\n//           id={id}\r\n//           open={open}\r\n//           anchorEl={anchorEl}\r\n//           onClose={handleClose}\r\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n//           sx={{ marginRight: 2, borderRadius: 20 }}\r\n//         >\r\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: '#edede9' }}>\r\n//             {responseDataList.map((responseItem, index) => (\r\n//               <Card key={index} sx={{ marginBottom: 2 }}>\r\n//                 <CardHeader title={responseItem.query} />\r\n//                 <Divider />\r\n//                 <CardContent>\r\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n//                 </CardContent>\r\n//                 <Divider />\r\n//                 <CardActions sx={{ display: 'flex', flexDirection: 'column' }}>\r\n//                   {responseItem.data.documents.map((doc, docIndex) => (\r\n//                     <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\r\n//                       <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n//                       <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\r\n//                     </Card>\r\n//                   ))}\r\n//                 </CardActions>\r\n//               </Card>\r\n//             ))}\r\n//           </Box>\r\n//         </Popover>\r\n//       </Box>\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Extract;\r\n\r\n\r\n\r\n\r\nimport { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport MarketTable from \"../components/MarketTable\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Extract() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const extractedDocs = location.state?.docs || [];\r\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n  const [existingData, setExistingData] = useState([]);\r\n  const [extractedData, setExtractedData] = useState([]);\r\n  const [chatQuery, setChatQuery] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [responseDataList, setResponseDataList] = useState([]);\r\n  const [expandedCards, setExpandedCards] = useState({});\r\n  const fabRef = useRef(null);\r\n  const [enableAnalyze, setEnableAnalyze] = s\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n        if (Array.isArray(response.data.body.companies)) {\r\n          setExistingData(response.data.body.companies);\r\n        } else {\r\n          console.warn(\"API returned an empty array or unexpected data format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n    fetchDatas(companyIds);\r\n  }, []);\r\n\r\n  const fetchDatas = async (input) => {\r\n    try {\r\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n      setExtractedData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChatSubmit = async (input) => {\r\n    setChatQuery(input);\r\n    try {\r\n      const inputObject = {\r\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n        query: input\r\n      };\r\n      \r\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n      setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n      setAnchorEl(fabRef.current);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedCards(prevState => ({\r\n      ...prevState,\r\n      [index]: !prevState[index]\r\n    }));\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"fab-popover\" : undefined;\r\n\r\n  return (\r\n    <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n          <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n          <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n        </Box>\r\n\r\n        <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n          <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n        </Fab>\r\n\r\n        {/* Popover containing response cards */}\r\n        <Popover \r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n          transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n          sx={{ marginRight: 2, borderRadius: 20 }}\r\n        >\r\n          <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\r\n            {responseDataList.map((responseItem, index) => (\r\n              <Card key={index} sx={{ marginBottom: 2 }}>\r\n                <CardHeader title={responseItem.query} />\r\n                <Divider />\r\n                <CardContent>\r\n                  <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n                </CardContent>\r\n                <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n                  <IconButton onClick={() => toggleExpand(index)}>\r\n                    {expandedCards[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </IconButton>\r\n                </CardActions>\r\n                <Divider />\r\n                <Collapse in={expandedCards[index]} timeout=\"auto\" unmountOnExit>\r\n                  <CardContent>\r\n                    {responseItem.data.documents.map((doc, docIndex) => (\r\n                      <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\r\n                        <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n                        <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\r\n                      </Card>\r\n                    ))}\r\n                  </CardContent>\r\n                </Collapse>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </Popover>\r\n      </Box>\r\n      <Box sx={{ flex: 2, marginTop: 2 }}>\r\n        <Chatbot onChatSubmit={handleChatSubmit} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Extract;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,SAASA,GAAG,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,OAAO,EAAEC,IAAI,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,eAAe;AAChJ,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,yBAAyB,MAAM,2CAA2C;AACjF,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,aAAa,GAAG,EAAAH,eAAA,GAAAC,QAAQ,CAACG,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBK,IAAI,KAAI,EAAE;EAChD,MAAMC,UAAU,GAAGH,aAAa,CAACI,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC;EAC3D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM6B,MAAM,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAGC,CAAC;EAE3C/B,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtC,KAAK,CAACuC,GAAG,CAAC,iEAAiE,CAAC;QACnG,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,EAAE;UAC/CtB,eAAe,CAACgB,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAC/C,CAAC,MAAM;UACLC,OAAO,CAACC,IAAI,CAAC,uDAAuD,CAAC;QACvE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDV,SAAS,CAAC,CAAC;IACXW,UAAU,CAAC/B,UAAU,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM+B,UAAU,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMtC,KAAK,CAACkD,IAAI,CAAC,4DAA4D,EAAE;QAAEC,WAAW,EAAEF;MAAM,CAAC,CAAC;MACvHzB,gBAAgB,CAACc,QAAQ,CAACI,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMK,gBAAgB,GAAG,MAAOH,KAAK,IAAK;IACxCvB,YAAY,CAACuB,KAAK,CAAC;IACnB,IAAI;MACF,MAAMI,WAAW,GAAG;QAClBC,UAAU,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,SAAS;QACnEC,KAAK,EAAEX;MACT,CAAC;MAED,MAAMX,QAAQ,GAAG,MAAMtC,KAAK,CAACkD,IAAI,CAAC,4DAA4D,EAAEG,WAAW,CAAC;MAC5GvB,mBAAmB,CAAC+B,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;QAAED,KAAK,EAAEX,KAAK;QAAEP,IAAI,EAAEJ,QAAQ,CAACI;MAAK,CAAC,CAAC,CAAC;MACrFd,WAAW,CAACK,MAAM,CAAC6B,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IACxBnC,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMoC,YAAY,GAAIC,KAAK,IAAK;IAC9BjC,gBAAgB,CAACkC,SAAS,KAAK;MAC7B,GAAGA,SAAS;MACZ,CAACD,KAAK,GAAG,CAACC,SAAS,CAACD,KAAK;IAC3B,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,IAAI,GAAGC,OAAO,CAACzC,QAAQ,CAAC;EAC9B,MAAM0C,EAAE,GAAGF,IAAI,GAAG,aAAa,GAAGG,SAAS;EAE3C,oBACE9D,OAAA,CAACxB,GAAG;IAACuF,EAAE,EAAE;MAAEC,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAChFpE,OAAA,CAACxB,GAAG;MAACuF,EAAE,EAAE;QAAEM,IAAI,EAAE,CAAC;QAAEH,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAS,CAAE;MAAAC,QAAA,gBAC7DpE,OAAA,CAACxB,GAAG;QAACuF,EAAE,EAAE;UAAEM,IAAI,EAAE,CAAC;UAAEH,OAAO,EAAE,MAAM;UAAEI,GAAG,EAAE;QAAE,CAAE;QAAAF,QAAA,gBAC5CpE,OAAA,CAACT,WAAW;UAAC2C,IAAI,EAAErB,YAAa;UAAC0D,KAAK,EAAC,EAAE;UAACV,EAAE,EAAC;QAAM;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtD3E,OAAA,CAACT,WAAW;UAAC2C,IAAI,EAAE0C,MAAM,CAACC,OAAO,CAAC9D,aAAa,CAAC,CAACL,GAAG,CAAC,CAAC,CAACyC,SAAS,EAAEjB,IAAI,CAAC,MAAM;YAAEiB,SAAS;YAAE,GAAGjB;UAAK,CAAC,CAAC,CAAE;UAACqC,KAAK,EAAC,EAAE;UAACV,EAAE,EAAC;QAAS;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5H,CAAC,eAEN3E,OAAA,CAACrB,GAAG;QAACmG,GAAG,EAAErD,MAAO;QAACsD,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEA,CAAA,KAAM5D,WAAW,CAACK,MAAM,CAAC6B,OAAO,CAAE;QAACS,EAAE,EAAE;UAAEkB,QAAQ,EAAE,OAAO;UAAEC,MAAM,EAAE,GAAG;UAAEC,KAAK,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAK,CAAE;QAAAhB,QAAA,eAC5IpE,OAAA,CAACL,yBAAyB;UAAC0F,WAAW,EAAC;QAAS;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAGN3E,OAAA,CAACpB,OAAO;QACNiF,EAAE,EAAEA,EAAG;QACPF,IAAI,EAAEA,IAAK;QACXxC,QAAQ,EAAEA,QAAS;QACnBmE,OAAO,EAAE/B,WAAY;QACrBgC,YAAY,EAAE;UAAEC,QAAQ,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAO,CAAE;QACzDC,eAAe,EAAE;UAAEF,QAAQ,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAQ,CAAE;QAC7D1B,EAAE,EAAE;UAAE4B,WAAW,EAAE,CAAC;UAAEC,YAAY,EAAE;QAAG,CAAE;QAAAxB,QAAA,eAEzCpE,OAAA,CAACxB,GAAG;UAACuF,EAAE,EAAE;YAAEE,OAAO,EAAE,CAAC;YAAE4B,KAAK,EAAE,OAAO;YAAE7B,MAAM,EAAE,OAAO;YAAE8B,SAAS,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAU,CAAE;UAAA3B,QAAA,EAChG/C,gBAAgB,CAACX,GAAG,CAAC,CAACsF,YAAY,EAAEvC,KAAK,kBACxCzD,OAAA,CAACnB,IAAI;YAAakF,EAAE,EAAE;cAAEkC,YAAY,EAAE;YAAE,CAAE;YAAA7B,QAAA,gBACxCpE,OAAA,CAAClB,UAAU;cAACyF,KAAK,EAAEyB,YAAY,CAAC5C;YAAM;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACzC3E,OAAA,CAACb,OAAO;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACX3E,OAAA,CAACjB,WAAW;cAAAqF,QAAA,eACVpE,OAAA,CAACvB,UAAU;gBAACyH,OAAO,EAAC,OAAO;gBAAA9B,QAAA,EAAE4B,YAAY,CAAC9D,IAAI,CAACiE;cAAM;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAa;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,eACd3E,OAAA,CAAChB,WAAW;cAAC+E,EAAE,EAAE;gBAAEqC,cAAc,EAAE;cAAW,CAAE;cAAAhC,QAAA,eAC9CpE,OAAA,CAACf,UAAU;gBAAC+F,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACC,KAAK,CAAE;gBAAAW,QAAA,EAC5C7C,aAAa,CAACkC,KAAK,CAAC,gBAAGzD,OAAA,CAACX,cAAc;kBAAAmF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,gBAAG3E,OAAA,CAACZ,cAAc;kBAAAoF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACd3E,OAAA,CAACb,OAAO;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACX3E,OAAA,CAACd,QAAQ;cAACmH,EAAE,EAAE9E,aAAa,CAACkC,KAAK,CAAE;cAAC6C,OAAO,EAAC,MAAM;cAACC,aAAa;cAAAnC,QAAA,eAC9DpE,OAAA,CAACjB,WAAW;gBAAAqF,QAAA,EACT4B,YAAY,CAAC9D,IAAI,CAACsE,SAAS,CAAC9F,GAAG,CAAC,CAACC,GAAG,EAAE8F,QAAQ,kBAC7CzG,OAAA,CAACnB,IAAI;kBAAgBkF,EAAE,EAAE;oBAAEE,OAAO,EAAE,CAAC;oBAAEyC,MAAM,EAAE,CAAC;oBAAEC,SAAS,EAAE,CAAC;oBAAEd,KAAK,EAAE;kBAAO,CAAE;kBAAAzB,QAAA,gBAC9EpE,OAAA,CAACvB,UAAU;oBAACyH,OAAO,EAAC,OAAO;oBAACU,UAAU,EAAC,MAAM;oBAAAxC,QAAA,EAAEzD,GAAG,CAACkG,QAAQ,CAACC;kBAAa;oBAAAtC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC,eACvF3E,OAAA,CAACvB,UAAU;oBAACyH,OAAO,EAAC,SAAS;oBAAA9B,QAAA,EAAEzD,GAAG,CAACkG,QAAQ,CAACE;kBAAW;oBAAAvC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAa,CAAC;gBAAA,GAF5D8B,QAAQ;kBAAAjC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAGb,CACP;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACS;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA,GArBFlB,KAAK;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsBV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACN3E,OAAA,CAACxB,GAAG;MAACuF,EAAE,EAAE;QAAEM,IAAI,EAAE,CAAC;QAAE2C,SAAS,EAAE;MAAE,CAAE;MAAA5C,QAAA,eACjCpE,OAAA,CAACV,OAAO;QAAC2H,YAAY,EAAErE;MAAiB;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzE,EAAA,CA9HQD,OAAO;EAAA,QACGR,WAAW,EACXC,WAAW;AAAA;AAAAwH,EAAA,GAFrBjH,OAAO;AAgIhB,eAAeA,OAAO;AAAC,IAAAiH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}