{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patna\\\\NewGit\\\\dtcc-hackathon\\\\src\\\\views\\\\Extract.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button } from \"@mui/material\";\nimport Chatbot from \"../components/Chatbot\";\nimport Card from \"../layouts/cards\";\nimport { useState, useEffect } from \"react\";\nimport Cards from \"../layouts/cards\";\nimport DocumentCard from \"../layouts/cards\";\nimport MarketTable from \"../components/MarketTable\";\nimport Axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Extract() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  // Extracting the docs array from the location state\n  const extractedDocs = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.docs) || [];\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\n  const [expanded, setExpanded] = useState(false);\n  const [showDoc, setShowDoc] = useState(false);\n  const [extractedData, setExtractedData] = useState([]);\n  const [existingData, setExistingData] = useState([]);\n  const [chatQuery, setChatQuery] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          //   setHeaders(Object.keys(response.data.body.companies[0]))\n          //   setApiData(response.data.body.companies);\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    fetchDatas(companyIds);\n  }, []);\n  const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\n    companyId,\n    ...data\n  }));\n  const fetchDatas = async input => {\n    try {\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", {\n        company_ids: input\n      });\n      setExtractedData(response.data);\n      console.log(response);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleChatSubmit = async input => {\n    setChatQuery(input);\n    navigate('/analyze', {\n      state: {\n        docs: {\n          company_id: JSON.parse(sessionStorage.getItem(\"rows\")[0].companyId),\n          query: input\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"100vh\",\n      padding: 2,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 8,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          display: \"flex\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(MarketTable, {\n          data: existingData,\n          title: \"\",\n          id: \"view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarketTable, {\n          data: companyArray,\n          title: \"\",\n          id: \"extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 2,\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        onChatSubmit: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Extract, \"5IDHnxWf+ZP13zL4M/yGmoj0yyA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Extract;\nexport default Extract;\nvar _c;\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"names":["Box","Typography","Button","Chatbot","Card","useState","useEffect","Cards","DocumentCard","MarketTable","Axios","useLocation","useNavigate","jsxDEV","_jsxDEV","Extract","_s","_location$state","location","navigate","extractedDocs","state","docs","companyIds","map","doc","Company_ID","expanded","setExpanded","showDoc","setShowDoc","extractedData","setExtractedData","existingData","setExistingData","chatQuery","setChatQuery","fetchData","response","get","Array","isArray","data","body","companies","console","warn","error","fetchDatas","companyArray","Object","entries","companyId","input","post","company_ids","log","handleChatSubmit","company_id","JSON","parse","sessionStorage","getItem","query","sx","height","padding","display","flexDirection","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","flex","gap","title","id","marginTop","onChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/patna/NewGit/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["import { Box, Typography, Button } from \"@mui/material\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport Card from \"../layouts/cards\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Cards from \"../layouts/cards\";\r\nimport DocumentCard from \"../layouts/cards\";\r\nimport MarketTable from \"../components/MarketTable\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Extract() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  // Extracting the docs array from the location state\r\n  const extractedDocs = location.state?.docs || [];\r\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [showDoc, setShowDoc] = useState(false);\r\n  const [extractedData, setExtractedData] = useState([]);\r\n  const [existingData, setExistingData] = useState([]);\r\n  const [chatQuery, setChatQuery] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n        if (Array.isArray(response.data.body.companies)) {\r\n          //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n          //   setApiData(response.data.body.companies);\r\n          setExistingData(response.data.body.companies)\r\n        } else {\r\n          console.warn(\"API returned an empty array or unexpected data format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n    fetchDatas(companyIds)\r\n  }, []);\r\n\r\n\r\n  const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\r\n    companyId,\r\n    ...data\r\n  }));\r\n\r\n  const fetchDatas = async (input) => {\r\n    try {\r\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n      setExtractedData(response.data)\r\n      console.log(response)\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  const handleChatSubmit = async (input) => {\r\n    setChatQuery(input);\r\n    navigate('/analyze', { state: { docs: {company_id: JSON.parse(sessionStorage.getItem(\"rows\")[0].companyId), query: input} } }); \r\n  };\r\n\r\n  return (\r\n    <Box sx={{ height: \"100vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n      <Typography variant=\"h5\">Extract</Typography>\r\n      {/* First Section (70%) */}\r\n      <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n          {/* Left Section */}\r\n          <MarketTable data={existingData} title=\"\" id=\"view\"/>\r\n          <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\r\n        </Box>\r\n      </Box>\r\n      {/* Second Section (30%) */}\r\n      <Box sx={{ flex: 2, marginTop: 2 }}>\r\n        <Chatbot onChatSubmit={handleChatSubmit} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\nexport default Extract;"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AACvD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,IAAI,MAAM,kBAAkB;AACnC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACjB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMQ,aAAa,GAAG,EAAAH,eAAA,GAAAC,QAAQ,CAACG,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBK,IAAI,KAAI,EAAE;EAChD,MAAMC,UAAU,GAAGH,aAAa,CAACI,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC;EAC3D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC0B,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC9CC,SAAS,CAAC,MAAM;IACd,MAAM+B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAC,iEAAiE,CAAC;QACnG,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,EAAE;UAC/C;UACA;UACAV,eAAe,CAACI,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAC/C,CAAC,MAAM;UACLC,OAAO,CAACC,IAAI,CAAC,uDAAuD,CAAC;QACvE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDV,SAAS,CAAC,CAAC;IACXW,UAAU,CAACzB,UAAU,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM0B,YAAY,GAAGC,MAAM,CAACC,OAAO,CAACpB,aAAa,CAAC,CAACP,GAAG,CAAC,CAAC,CAAC4B,SAAS,EAAEV,IAAI,CAAC,MAAM;IAC7EU,SAAS;IACT,GAAGV;EACL,CAAC,CAAC,CAAC;EAEH,MAAMM,UAAU,GAAG,MAAOK,KAAK,IAAK;IAClC,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAM5B,KAAK,CAAC4C,IAAI,CAAC,4DAA4D,EAAE;QAAEC,WAAW,EAAEF;MAAM,CAAC,CAAC;MACvHrB,gBAAgB,CAACM,QAAQ,CAACI,IAAI,CAAC;MAC/BG,OAAO,CAACW,GAAG,CAAClB,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACD,MAAMU,gBAAgB,GAAG,MAAOJ,KAAK,IAAK;IACxCjB,YAAY,CAACiB,KAAK,CAAC;IACnBlC,QAAQ,CAAC,UAAU,EAAE;MAAEE,KAAK,EAAE;QAAEC,IAAI,EAAE;UAACoC,UAAU,EAAEC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACV,SAAS,CAAC;UAAEW,KAAK,EAAEV;QAAK;MAAE;IAAE,CAAC,CAAC;EAChI,CAAC;EAED,oBACEvC,OAAA,CAACd,GAAG;IAACgE,EAAE,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACjFvD,OAAA,CAACb,UAAU;MAACqE,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAE7C5D,OAAA,CAACd,GAAG;MAACgE,EAAE,EAAE;QAAEW,IAAI,EAAE,CAAC;QAAER,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAS,CAAE;MAAAC,QAAA,eAC7DvD,OAAA,CAACd,GAAG;QAACgE,EAAE,EAAE;UAAEW,IAAI,EAAE,CAAC;UAAER,OAAO,EAAE,MAAM;UAAES,GAAG,EAAE;QAAE,CAAE;QAAAP,QAAA,gBAE5CvD,OAAA,CAACL,WAAW;UAACiC,IAAI,EAAET,YAAa;UAAC4C,KAAK,EAAC,EAAE;UAACC,EAAE,EAAC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrD5D,OAAA,CAACL,WAAW;UAACiC,IAAI,EAAEO,YAAa;UAAC4B,KAAK,EAAC,EAAE;UAACC,EAAE,EAAC;QAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5D,OAAA,CAACd,GAAG;MAACgE,EAAE,EAAE;QAAEW,IAAI,EAAE,CAAC;QAAEI,SAAS,EAAE;MAAE,CAAE;MAAAV,QAAA,eACjCvD,OAAA,CAACX,OAAO;QAAC6E,YAAY,EAAEvB;MAAiB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1D,EAAA,CAnEQD,OAAO;EAAA,QACGJ,WAAW,EACXC,WAAW;AAAA;AAAAqE,EAAA,GAFrBlE,OAAO;AAoEhB,eAAeA,OAAO;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}