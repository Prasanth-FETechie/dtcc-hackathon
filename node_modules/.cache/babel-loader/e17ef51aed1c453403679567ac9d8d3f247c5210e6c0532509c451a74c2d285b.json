{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinee\\\\OneDrive\\\\Desktop\\\\DTCC Hackathon\\\\dtcc-ai-ui\\\\dtcc-hackathon\\\\src\\\\views\\\\Extract.jsx\",\n  _s = $RefreshSig$();\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n// import ExpandLessIcon from '@mui/icons-material/ExpandLess';\n// import Chatbot from \"../components/Chatbot\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n// import { useState, useEffect, useRef } from \"react\";\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [existingData, setExistingData] = useState([]);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState(\"\");\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const [responseDataList, setResponseDataList] = useState([]);\n//   const [expandedCards, setExpandedCards] = useState({});\n//   const fabRef = useRef(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           setExistingData(response.data.body.companies);\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds);\n//   }, []);\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     try {\n//       const inputObject = {\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n//         query: input\n//       };\n\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\n//       setAnchorEl(fabRef.current);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const toggleExpand = (index) => {\n//     setExpandedCards(prevState => ({\n//       ...prevState,\n//       [index]: !prevState[index]\n//     }));\n//   };\n\n//   const open = Boolean(anchorEl);\n//   const id = open ? \"fab-popover\" : undefined;\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\n//         </Box>\n\n//         { responseDataList.length > 0 && <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>}\n\n//         {/* Popover containing response cards */}\n//         <Popover \n//           id={id}\n//           open={open}\n//           anchorEl={anchorEl}\n//           onClose={handleClose}\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\n//           sx={{ marginRight: 2, borderRadius: 20 }}\n//         >\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\n//             {responseDataList.map((responseItem, index) => (\n//               <Card key={index} sx={{ marginBottom: 2 }}>\n//                 <CardHeader title={responseItem.query} />\n//                 <Divider />\n//                 <CardContent>\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\n//                 </CardContent>\n//                 <CardActions sx={{ justifyContent: \"flex-end\" }}>\n//                   <IconButton onClick={() => toggleExpand(index)}>\n//                     {expandedCards[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n//                   </IconButton>\n//                 </CardActions>\n//                 <Divider />\n//                 <Collapse in={expandedCards[index]} timeout=\"auto\" unmountOnExit>\n//                   <CardContent>\n//                     {responseItem.data.documents.map((doc, docIndex) => (\n//                       <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\n//                         <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\n//                         <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\n//                       </Card>\n//                     ))}\n//                   </CardContent>\n//                 </Collapse>\n//               </Card>\n//             ))}\n//           </Box>\n//         </Popover>\n//       </Box>\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n\n// export default Extract;\n\nimport { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport AudiotrackOutlinedIcon from '@mui/icons-material/AudiotrackOutlined';\nimport LanguageOutlinedIcon from '@mui/icons-material/LanguageOutlined';\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\nimport Chatbot from \"../components/Chatbot\";\nimport MarketTable from \"../components/MarketTable\";\nimport Axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Extract() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const extractedDocs = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.docs) || [];\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\n  const [existingData, setExistingData] = useState([]);\n  const [extractedData, setExtractedData] = useState([]);\n  const [chatQuery, setChatQuery] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [responseDataList, setResponseDataList] = useState([]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const [expandedDocsCard, setExpandedDocsCard] = useState({});\n  const [expandedDocs, setExpandedDocs] = useState({});\n  const fabRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    fetchDatas(companyIds);\n  }, []);\n  const fetchDatas = async input => {\n    try {\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", {\n        company_ids: input\n      });\n      setExtractedData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleChatSubmit = async input => {\n    setChatQuery(input);\n    try {\n      const inputObject = {\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n        query: input\n      };\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n      setResponseDataList(prevList => [...prevList, {\n        query: input,\n        data: response.data\n      }]);\n      setAnchorEl(fabRef.current);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const toggleExpand = index => {\n    setExpandedCards(prevState => ({\n      ...prevState,\n      [index]: !prevState[index]\n    }));\n  };\n  const toggleDocsExpand = index => {\n    setExpandedDocsCard(prevState => ({\n      ...prevState,\n      [index]: !prevState[index]\n    }));\n  };\n  const toggleDocExpand = index => {\n    setExpandedDocs(prevState => ({\n      ...prevState,\n      [index]: !prevState[index]\n    }));\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"fab-popover\" : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"85vh\",\n      padding: 2,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'center',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'center',\n        horizontal: 'right'\n      },\n      sx: {\n        marginRight: 2,\n        borderRadius: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          padding: 2,\n          width: '650px',\n          height: '600px',\n          overflowY: 'auto',\n          background: \"#edf6f9\"\n        },\n        children: responseDataList.map((responseItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            marginBottom: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: responseItem.query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: responseItem.data.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => toggleDocsExpand(index),\n              children: expandedDocsCard[index] ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: expandedDocsCard[index],\n            timeout: \"auto\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: responseItem.data.documents.map((doc, docIndex) => /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  marginBottom: 1,\n                  padding: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  fontWeight: \"bold\",\n                  children: doc.metadata.Document_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  align: \"right\",\n                  children: doc.metadata.Company_Name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => toggleDocExpand(docIndex),\n                  children: expandedDocs[docIndex] ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 51\n                  }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 72\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                  in: expandedDocs[docIndex],\n                  timeout: \"auto\",\n                  unmountOnExit: true,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: doc.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    sx: {\n                      color: 'blue',\n                      float: 'right'\n                    },\n                    href: doc.metadata._source_uri,\n                    target: \"_blank\",\n                    children: doc.metadata.Document_Type === \"CONCALL\" ? /*#__PURE__*/_jsxDEV(AudiotrackOutlinedIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 71\n                    }, this) : doc.metadata.Document_Type === \"WEB\" ? /*#__PURE__*/_jsxDEV(LanguageOutlinedIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 139\n                    }, this) : /*#__PURE__*/_jsxDEV(PictureAsPdfOutlinedIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 166\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this)]\n              }, docIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(Extract, \"QRzxGPYAgaasUb4XrTtCqhTd0YY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Extract;\nexport default Extract;\nvar _c;\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"names":["Box","Typography","Button","Fab","Popover","Card","CardHeader","CardContent","CardActions","IconButton","Collapse","Divider","ExpandMoreIcon","ExpandLessIcon","AudiotrackOutlinedIcon","LanguageOutlinedIcon","PictureAsPdfOutlinedIcon","Chatbot","MarketTable","Axios","useLocation","useNavigate","QuestionAnswerRoundedIcon","useState","useEffect","useRef","jsxDEV","_jsxDEV","Extract","_s","_location$state","location","navigate","extractedDocs","state","docs","companyIds","map","doc","Company_ID","existingData","setExistingData","extractedData","setExtractedData","chatQuery","setChatQuery","anchorEl","setAnchorEl","responseDataList","setResponseDataList","expandedCards","setExpandedCards","expandedDocsCard","setExpandedDocsCard","expandedDocs","setExpandedDocs","fabRef","fetchData","response","get","Array","isArray","data","body","companies","console","warn","error","fetchDatas","input","post","company_ids","handleChatSubmit","inputObject","company_id","JSON","parse","sessionStorage","getItem","companyId","query","prevList","current","handleClose","toggleExpand","index","prevState","toggleDocsExpand","toggleDocExpand","open","Boolean","id","undefined","sx","height","padding","display","flexDirection","children","onClose","anchorOrigin","vertical","horizontal","transformOrigin","marginRight","borderRadius","width","overflowY","background","responseItem","marginBottom","title","fileName","_jsxFileName","lineNumber","columnNumber","variant","answer","onClick","in","timeout","unmountOnExit","documents","docIndex","fontWeight","metadata","Document_Name","align","Company_Name","content","color","float","href","_source_uri","target","Document_Type","_c","$RefreshReg$"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\r\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n// import ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n// import { useState, useEffect, useRef } from \"react\";\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState(\"\");\r\n//   const [anchorEl, setAnchorEl] = useState(null);\r\n//   const [responseDataList, setResponseDataList] = useState([]);\r\n//   const [expandedCards, setExpandedCards] = useState({});\r\n//   const fabRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           setExistingData(response.data.body.companies);\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds);\r\n//   }, []);\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     try {\r\n//       const inputObject = {\r\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n//         query: input\r\n//       };\r\n      \r\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n//       setAnchorEl(fabRef.current);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const toggleExpand = (index) => {\r\n//     setExpandedCards(prevState => ({\r\n//       ...prevState,\r\n//       [index]: !prevState[index]\r\n//     }));\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? \"fab-popover\" : undefined;\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n//         </Box>\r\n\r\n//         { responseDataList.length > 0 && <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>}\r\n\r\n//         {/* Popover containing response cards */}\r\n//         <Popover \r\n//           id={id}\r\n//           open={open}\r\n//           anchorEl={anchorEl}\r\n//           onClose={handleClose}\r\n//           anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n//           transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n//           sx={{ marginRight: 2, borderRadius: 20 }}\r\n//         >\r\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\r\n//             {responseDataList.map((responseItem, index) => (\r\n//               <Card key={index} sx={{ marginBottom: 2 }}>\r\n//                 <CardHeader title={responseItem.query} />\r\n//                 <Divider />\r\n//                 <CardContent>\r\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n//                 </CardContent>\r\n//                 <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n//                   <IconButton onClick={() => toggleExpand(index)}>\r\n//                     {expandedCards[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n//                   </IconButton>\r\n//                 </CardActions>\r\n//                 <Divider />\r\n//                 <Collapse in={expandedCards[index]} timeout=\"auto\" unmountOnExit>\r\n//                   <CardContent>\r\n//                     {responseItem.data.documents.map((doc, docIndex) => (\r\n//                       <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2, width: '100%' }}>\r\n//                         <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n//                         <Typography variant=\"caption\">{doc.metadata._source_uri}</Typography>\r\n//                       </Card>\r\n//                     ))}\r\n//                   </CardContent>\r\n//                 </Collapse>\r\n//               </Card>\r\n//             ))}\r\n//           </Box>\r\n//         </Popover>\r\n//       </Box>\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\n// export default Extract;\r\n\r\n\r\n\r\n\r\nimport { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport AudiotrackOutlinedIcon from '@mui/icons-material/AudiotrackOutlined';\r\nimport LanguageOutlinedIcon from '@mui/icons-material/LanguageOutlined';\r\nimport PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport MarketTable from \"../components/MarketTable\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Extract() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const extractedDocs = location.state?.docs || [];\r\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n  const [existingData, setExistingData] = useState([]);\r\n  const [extractedData, setExtractedData] = useState([]);\r\n  const [chatQuery, setChatQuery] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [responseDataList, setResponseDataList] = useState([]);\r\n  const [expandedCards, setExpandedCards] = useState({});\r\n  const [expandedDocsCard, setExpandedDocsCard] = useState({});\r\n  const [expandedDocs, setExpandedDocs] = useState({});\r\n  const fabRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n        if (Array.isArray(response.data.body.companies)) {\r\n          setExistingData(response.data.body.companies);\r\n        } else {\r\n          console.warn(\"API returned an empty array or unexpected data format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n    fetchDatas(companyIds);\r\n  }, []);\r\n\r\n  const fetchDatas = async (input) => {\r\n    try {\r\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n      setExtractedData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChatSubmit = async (input) => {\r\n    setChatQuery(input);\r\n    try {\r\n      const inputObject = {\r\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n        query: input\r\n      };\r\n      \r\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n      setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n      setAnchorEl(fabRef.current);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedCards(prevState => ({\r\n      ...prevState,\r\n      [index]: !prevState[index]\r\n    }));\r\n  };\r\n\r\n  const toggleDocsExpand = (index) => {\r\n    setExpandedDocsCard(prevState => ({\r\n      ...prevState,\r\n      [index]: !prevState[index]\r\n    }));\r\n  };\r\n\r\n  const toggleDocExpand = (index) => {\r\n    setExpandedDocs(prevState => ({\r\n      ...prevState,\r\n      [index]: !prevState[index]\r\n    }));\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"fab-popover\" : undefined;\r\n\r\n  return (\r\n    <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n      <Popover id={id} open={open} anchorEl={anchorEl} onClose={handleClose} anchorOrigin={{ vertical: 'center', horizontal: 'left' }} transformOrigin={{ vertical: 'center', horizontal: 'right' }} sx={{ marginRight: 2, borderRadius: 20 }}>\r\n        <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\r\n          {responseDataList.map((responseItem, index) => (\r\n            <Card key={index} sx={{ marginBottom: 2 }}>\r\n              <CardHeader title={responseItem.query} />\r\n              <CardContent>\r\n                <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <IconButton onClick={() => toggleDocsExpand(index)}>\r\n                  {expandedDocsCard[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                </IconButton>\r\n              </CardActions>\r\n              <Collapse in={expandedDocsCard[index]} timeout=\"auto\" unmountOnExit>\r\n                <CardContent>\r\n                  {responseItem.data.documents.map((doc, docIndex) => (\r\n                    <Card key={docIndex} sx={{ marginBottom: 1, padding: 1 }}>\r\n                      <Typography variant=\"body1\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n                      <Typography variant=\"body2\" align=\"right\">{doc.metadata.Company_Name}</Typography>\r\n                      <IconButton onClick={() => toggleDocExpand(docIndex)}>\r\n                        {expandedDocs[docIndex] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                      </IconButton>\r\n                      <Collapse in={expandedDocs[docIndex]} timeout=\"auto\" unmountOnExit>\r\n                        <Typography variant=\"body2\">{doc.content}</Typography>\r\n                        <IconButton sx={{ color: 'blue', float: 'right' }} href={doc.metadata._source_uri} target=\"_blank\">\r\n                          {doc.metadata.Document_Type === \"CONCALL\" ? <AudiotrackOutlinedIcon /> : doc.metadata.Document_Type === \"WEB\" ? <LanguageOutlinedIcon /> : <PictureAsPdfOutlinedIcon />}\r\n                        </IconButton>\r\n                      </Collapse>\r\n                    </Card>\r\n                  ))}\r\n                </CardContent>\r\n              </Collapse>\r\n            </Card>\r\n          ))}\r\n        </Box>\r\n      </Popover>\r\n    </Box>\r\n  );\r\n}  \r\n\r\nexport default Extract;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,SAASA,GAAG,EAAEC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,OAAO,EAAEC,IAAI,EAAEC,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,eAAe;AAChJ,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,OAAOC,wBAAwB,MAAM,0CAA0C;AAC/E,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,yBAAyB,MAAM,2CAA2C;AACjF,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,OAAOA,CAAA,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}