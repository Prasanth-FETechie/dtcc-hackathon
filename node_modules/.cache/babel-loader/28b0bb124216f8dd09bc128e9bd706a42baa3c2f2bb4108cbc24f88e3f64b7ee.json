{"ast":null,"code":"'use client';\n\nimport { useStorageState, useStorageStateServer } from \"../persistence/index.js\";\n\n/**\r\n * Sync state to local storage so that it persists through a page refresh. Usage is\r\n * similar to useState except we pass in a storage key so that we can default\r\n * to that value on page load instead of the specified initial value.\r\n *\r\n * Since the storage API isn't available in server-rendering environments, we\r\n * return null during SSR and hydration.\r\n */\nconst useLocalStorageStateBrowser = (...args) => useStorageState(window.localStorage, ...args);\nexport const useLocalStorageState = typeof window === 'undefined' ? useStorageStateServer : useLocalStorageStateBrowser;","map":{"version":3,"names":["useStorageState","useStorageStateServer","useLocalStorageStateBrowser","args","window","localStorage","useLocalStorageState"],"sources":["C:/Users/patna/NewGit/dtcc-hackathon/node_modules/@toolpad/core/useLocalStorageState/useLocalStorageState.js"],"sourcesContent":["'use client';\r\n\r\nimport { useStorageState, useStorageStateServer } from \"../persistence/index.js\";\r\n\r\n/**\r\n * Sync state to local storage so that it persists through a page refresh. Usage is\r\n * similar to useState except we pass in a storage key so that we can default\r\n * to that value on page load instead of the specified initial value.\r\n *\r\n * Since the storage API isn't available in server-rendering environments, we\r\n * return null during SSR and hydration.\r\n */\r\nconst useLocalStorageStateBrowser = (...args) => useStorageState(window.localStorage, ...args);\r\nexport const useLocalStorageState = typeof window === 'undefined' ? useStorageStateServer : useLocalStorageStateBrowser;"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,eAAe,EAAEC,qBAAqB,QAAQ,yBAAyB;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,2BAA2B,GAAGA,CAAC,GAAGC,IAAI,KAAKH,eAAe,CAACI,MAAM,CAACC,YAAY,EAAE,GAAGF,IAAI,CAAC;AAC9F,OAAO,MAAMG,oBAAoB,GAAG,OAAOF,MAAM,KAAK,WAAW,GAAGH,qBAAqB,GAAGC,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}