{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from \"../composeClasses/index.js\";\nimport { getOptionGroupUtilityClass } from \"./optionGroupClasses.js\";\nimport { useSlotProps } from \"../utils/index.js\";\nimport { useClassNamesOverride } from \"../utils/ClassNameConfigurator.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction useUtilityClasses(disabled) {\n  const slots = {\n    root: ['root', disabled && 'disabled'],\n    label: ['label'],\n    list: ['list']\n  };\n  return composeClasses(slots, useClassNamesOverride(getOptionGroupUtilityClass));\n}\n\n/**\r\n * An unstyled option group to be used within a Select.\r\n *\r\n * Demos:\r\n *\r\n * - [Select](https://mui.com/base-ui/react-select/)\r\n *\r\n * API:\r\n *\r\n * - [OptionGroup API](https://mui.com/base-ui/react-select/components-api/#option-group)\r\n */\nconst OptionGroup = /*#__PURE__*/React.forwardRef(function OptionGroup(props, forwardedRef) {\n  const {\n    disabled = false,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const Root = slots?.root || 'li';\n  const Label = slots?.label || 'span';\n  const List = slots?.list || 'ul';\n  const classes = useUtilityClasses(disabled);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef\n    },\n    ownerState: props,\n    className: classes.root\n  });\n  const labelProps = useSlotProps({\n    elementType: Label,\n    externalSlotProps: slotProps.label,\n    ownerState: props,\n    className: classes.label\n  });\n  const listProps = useSlotProps({\n    elementType: List,\n    externalSlotProps: slotProps.list,\n    ownerState: props,\n    className: classes.list\n  });\n  return /*#__PURE__*/_jsxs(Root, {\n    ...rootProps,\n    children: [/*#__PURE__*/_jsx(Label, {\n      ...labelProps,\n      children: props.label\n    }), /*#__PURE__*/_jsx(List, {\n      ...listProps,\n      children: props.children\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n  /**\r\n   * If `true` all the options in the group will be disabled.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n  /**\r\n   * The human-readable description of the group.\r\n   */\n  label: PropTypes.node,\n  /**\r\n   * The props used for each slot inside the Input.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the OptionGroup.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    label: PropTypes.elementType,\n    list: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { OptionGroup };","map":{"version":3,"names":["React","PropTypes","unstable_composeClasses","composeClasses","getOptionGroupUtilityClass","useSlotProps","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","disabled","slots","root","label","list","OptionGroup","forwardRef","props","forwardedRef","slotProps","other","Root","Label","List","classes","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","ownerState","className","labelProps","listProps","children","process","env","NODE_ENV","propTypes","node","string","bool","shape","oneOfType","func","object"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/node_modules/@mui/base/OptionGroup/OptionGroup.js"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_composeClasses as composeClasses } from \"../composeClasses/index.js\";\r\nimport { getOptionGroupUtilityClass } from \"./optionGroupClasses.js\";\r\nimport { useSlotProps } from \"../utils/index.js\";\r\nimport { useClassNamesOverride } from \"../utils/ClassNameConfigurator.js\";\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nfunction useUtilityClasses(disabled) {\r\n  const slots = {\r\n    root: ['root', disabled && 'disabled'],\r\n    label: ['label'],\r\n    list: ['list']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getOptionGroupUtilityClass));\r\n}\r\n\r\n/**\r\n * An unstyled option group to be used within a Select.\r\n *\r\n * Demos:\r\n *\r\n * - [Select](https://mui.com/base-ui/react-select/)\r\n *\r\n * API:\r\n *\r\n * - [OptionGroup API](https://mui.com/base-ui/react-select/components-api/#option-group)\r\n */\r\nconst OptionGroup = /*#__PURE__*/React.forwardRef(function OptionGroup(props, forwardedRef) {\r\n  const {\r\n    disabled = false,\r\n    slotProps = {},\r\n    slots = {},\r\n    ...other\r\n  } = props;\r\n  const Root = slots?.root || 'li';\r\n  const Label = slots?.label || 'span';\r\n  const List = slots?.list || 'ul';\r\n  const classes = useUtilityClasses(disabled);\r\n  const rootProps = useSlotProps({\r\n    elementType: Root,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      ref: forwardedRef\r\n    },\r\n    ownerState: props,\r\n    className: classes.root\r\n  });\r\n  const labelProps = useSlotProps({\r\n    elementType: Label,\r\n    externalSlotProps: slotProps.label,\r\n    ownerState: props,\r\n    className: classes.label\r\n  });\r\n  const listProps = useSlotProps({\r\n    elementType: List,\r\n    externalSlotProps: slotProps.list,\r\n    ownerState: props,\r\n    className: classes.list\r\n  });\r\n  return /*#__PURE__*/_jsxs(Root, {\r\n    ...rootProps,\r\n    children: [/*#__PURE__*/_jsx(Label, {\r\n      ...labelProps,\r\n      children: props.label\r\n    }), /*#__PURE__*/_jsx(List, {\r\n      ...listProps,\r\n      children: props.children\r\n    })]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? OptionGroup.propTypes /* remove-proptypes */ = {\r\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\r\n  // │ These PropTypes are generated from the TypeScript type definitions. │\r\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\r\n  // └─────────────────────────────────────────────────────────────────────┘\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n  /**\r\n   * If `true` all the options in the group will be disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n  /**\r\n   * The human-readable description of the group.\r\n   */\r\n  label: PropTypes.node,\r\n  /**\r\n   * The props used for each slot inside the Input.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    label: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    list: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the OptionGroup.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    label: PropTypes.elementType,\r\n    list: PropTypes.elementType,\r\n    root: PropTypes.elementType\r\n  })\r\n} : void 0;\r\nexport { OptionGroup };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}