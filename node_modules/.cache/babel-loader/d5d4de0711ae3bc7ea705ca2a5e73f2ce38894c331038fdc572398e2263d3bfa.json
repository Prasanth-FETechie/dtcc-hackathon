{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patna\\\\NewGit\\\\dtcc-hackathon\\\\src\\\\views\\\\View.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Box, Button, Typography } from \"@mui/material\";\nimport MarketTable from \"../components/MarketTable\";\nimport { historicalData, predictedData } from \"../data/historicalData\";\nimport Chatbot from \"../components/Chatbot\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction View() {\n  _s();\n  const [showPrediction, setShowPrediction] = useState(false);\n  const [existingData, setExistingData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          //   setHeaders(Object.keys(response.data.body.companies[0]))\n          //   setApiData(response.data.body.companies);\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    // console.log(headers);\n    // console.log(apiData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Market Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarketTable, {\n        data: existingData,\n        title: \"Historical Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), showPrediction && /*#__PURE__*/_jsxDEV(MarketTable, {\n        data: predictedData,\n        title: \"Predicted Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 2,\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        onChatSubmit: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(View, \"VGD/cZ80/d/UfcW2Gm+6lEhHwt0=\");\n_c = View;\nexport default View;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["useEffect","useState","Box","Button","Typography","MarketTable","historicalData","predictedData","Chatbot","Axios","jsxDEV","_jsxDEV","Fragment","_Fragment","View","_s","showPrediction","setShowPrediction","existingData","setExistingData","fetchData","response","get","Array","isArray","data","body","companies","console","warn","error","children","sx","p","variant","fileName","_jsxFileName","lineNumber","columnNumber","title","flex","marginTop","onChatSubmit","handleChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/patna/NewGit/dtcc-hackathon/src/views/View.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\nimport MarketTable from \"../components/MarketTable\";\r\nimport { historicalData, predictedData } from \"../data/historicalData\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport Axios from \"axios\";\r\nfunction View() {\r\n    const [showPrediction, setShowPrediction] = useState(false);\r\n    const [existingData, setExistingData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n                if (Array.isArray(response.data.body.companies)) {\r\n                    //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n                    //   setApiData(response.data.body.companies);\r\n                    setExistingData(response.data.body.companies)\r\n                } else {\r\n                    console.warn(\"API returned an empty array or unexpected data format\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching data:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n        // console.log(headers);\r\n        // console.log(apiData);\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Box sx={{ p: 3 }}>\r\n                <Typography variant=\"h5\">Market Trends</Typography>\r\n                <MarketTable data={existingData} title=\"Historical Data\" />\r\n                {showPrediction && <MarketTable data={predictedData} title=\"Predicted Data\" />}\r\n            </Box>\r\n            <Box sx={{ flex: 2, marginTop: 2 }}>\r\n                <Chatbot onChatSubmit={handleChatSubmit} />\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\nexport default View;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AACvD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,cAAc,EAAEC,aAAa,QAAQ,wBAAwB;AACtE,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpDD,SAAS,CAAC,MAAM;IACZ,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iEAAiE,CAAC;QACnG,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,EAAE;UAC7C;UACA;UACAR,eAAe,CAACE,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QACjD,CAAC,MAAM;UACHC,OAAO,CAACC,IAAI,CAAC,uDAAuD,CAAC;QACzE;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAEDV,SAAS,CAAC,CAAC;IACX;IACA;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,oBACIT,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACT,GAAG;MAAC8B,EAAE,EAAE;QAAEC,CAAC,EAAE;MAAE,CAAE;MAAAF,QAAA,gBACdpB,OAAA,CAACP,UAAU;QAAC8B,OAAO,EAAC,IAAI;QAAAH,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACnD3B,OAAA,CAACN,WAAW;QAACoB,IAAI,EAAEP,YAAa;QAACqB,KAAK,EAAC;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC1DtB,cAAc,iBAAIL,OAAA,CAACN,WAAW;QAACoB,IAAI,EAAElB,aAAc;QAACgC,KAAK,EAAC;MAAgB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,eACN3B,OAAA,CAACT,GAAG;MAAC8B,EAAE,EAAE;QAAEQ,IAAI,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAAV,QAAA,eAC/BpB,OAAA,CAACH,OAAO;QAACkC,YAAY,EAAEC;MAAiB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA,eACR,CAAC;AAEX;AAACvB,EAAA,CAnCQD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAoCb,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}