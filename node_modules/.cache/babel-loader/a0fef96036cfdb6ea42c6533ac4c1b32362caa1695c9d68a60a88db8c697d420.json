{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patna\\\\dtcc-hackathon\\\\src\\\\components\\\\MarketTable.jsx\",\n  _s = $RefreshSig$();\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\nimport Axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MarketTable({\n  data,\n  title\n}) {\n  _s();\n  const [headers, setHeaders] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(data);\n        if (Array.isArray(response.data.body) && response.data.body.length > 0) {\n          setHeaders(Object.keys(response.data.body[0]));\n          setApiData(response.data.body);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    console.log(headers);\n    console.log(apiData);\n  }, []);\n  if (apiData.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 36\n  }, this);\n  // Sorting logic\n  const handleSort = property => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n    const sortedData = [...data].sort((a, b) => {\n      if (a[property] < b[property]) return isAsc ? -1 : 1;\n      if (a[property] > b[property]) return isAsc ? 1 : -1;\n      return 0;\n    });\n    setData(sortedData);\n  };\n\n  // Filtered and paginated data\n  const filteredData = data.filter(row => headers.some(header => String(row[header]).toLowerCase().includes(search.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: \"100%\",\n        overflow: \"hidden\",\n        padding: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search...\",\n        variant: \"outlined\",\n        fullWidth: true,\n        onChange: e => setSearch(e.target.value),\n        sx: {\n          marginBottom: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: headers.map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: header\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: apiData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: headers.map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row[header]\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(MarketTable, \"5chFSMoMRwumZH6APIglP3pHquI=\");\n_c = MarketTable;\nexport default MarketTable;\nvar _c;\n$RefreshReg$(_c, \"MarketTable\");","map":{"version":3,"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","MarketTable","data","title","_s","headers","setHeaders","apiData","setApiData","fetchData","response","get","Array","isArray","body","length","Object","keys","console","warn","error","log","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSort","property","isAsc","orderBy","order","setOrder","setOrderBy","sortedData","sort","a","b","setData","filteredData","filter","row","some","header","String","toLowerCase","includes","search","sx","width","overflow","padding","TextField","label","variant","fullWidth","onChange","e","setSearch","target","value","marginBottom","component","map","rowIndex","_c","$RefreshReg$"],"sources":["C:/Users/patna/dtcc-hackathon/src/components/MarketTable.jsx"],"sourcesContent":["import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography } from \"@mui/material\";\r\nimport Axios  from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction MarketTable({ data, title }) {\r\n    const [headers, setHeaders] = useState([]);\r\n    const [apiData, setApiData] = useState([]);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n          try {\r\n            const response = await Axios.get(data);\r\n            if (Array.isArray(response.data.body) && response.data.body.length > 0) {\r\n                setHeaders(Object.keys(response.data.body[0]))\r\n                setApiData(response.data.body);\r\n              } else {\r\n                console.warn(\"API returned an empty array or unexpected data format\");\r\n              }\r\n          } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n          }\r\n        };\r\n    \r\n        fetchData();\r\n        console.log(headers);\r\n        console.log(apiData);\r\n      }, []);\r\n  if (apiData.length === 0) return <p>Loading...</p>;\r\n// Sorting logic\r\nconst handleSort = (property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n\r\n    const sortedData = [...data].sort((a, b) => {\r\n      if (a[property] < b[property]) return isAsc ? -1 : 1;\r\n      if (a[property] > b[property]) return isAsc ? 1 : -1;\r\n      return 0;\r\n    });\r\n\r\n    setData(sortedData);\r\n  };\r\n\r\n  // Filtered and paginated data\r\n  const filteredData = data.filter((row) =>\r\n    headers.some((header) =>\r\n      String(row[header]).toLowerCase().includes(search.toLowerCase())\r\n    )\r\n  );\r\n\r\n  return (\r\n    <>\r\n    <h3>{title}</h3>\r\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\", padding: 2 }}>\r\n      {/* Search Box */}\r\n      <TextField\r\n        label=\"Search...\"\r\n        variant=\"outlined\"\r\n        fullWidth\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        sx={{ marginBottom: 2 }}\r\n      />\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {headers.map((header) => (\r\n              <TableCell key={header}>{header}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {apiData.map((row, rowIndex) => (\r\n            <TableRow key={rowIndex}>\r\n              {headers.map((header) => (\r\n                <TableCell key={header}>{row[header]}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n    </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default MarketTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}