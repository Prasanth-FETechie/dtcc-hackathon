{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinee\\\\OneDrive\\\\Desktop\\\\DTCC Hackathon\\\\dtcc-ai-ui\\\\dtcc-hackathon\\\\src\\\\views\\\\Extract.jsx\",\n  _s = $RefreshSig$();\n// import { Box, Typography, Button, Fab } from \"@mui/material\";\n// import Chatbot from \"../components/Chatbot\";\n// import Card from \"../layouts/cards\";\n// import { useState, useEffect } from \"react\";\n// import Cards from \"../layouts/cards\";\n// import DocumentCard from \"../layouts/cards\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   // Extracting the docs array from the location state\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [expanded, setExpanded] = useState(false);\n//   const [showDoc, setShowDoc] = useState(false);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [existingData, setExistingData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState([]);\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           //   setHeaders(Object.keys(response.data.body.companies[0]))\n//           //   setApiData(response.data.body.companies);\n//           setExistingData(response.data.body.companies)\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds)\n//   }, []);\n\n//   const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\n//     companyId,\n//     ...data\n//   }));\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data)\n//       console.log(response)\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     const companys = JSON.parse(sessionStorage.getItem(\"rows\"))\n//     // navigate('/analyze', { state: { docs: {company_id: companys[0].companyId, query: input} } }); \n//     // Axios api with analyze format\n//   };\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       {/* <Typography variant=\"h5\">Extract</Typography> */}\n//       {/* First Section (70%) */}\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           {/* Left Section */}\n//           <MarketTable data={existingData} title=\"\" id=\"view\"/>\n//           <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\n//         </Box>\n\n//         <Fab color=\"primary\" onClick={() => {}} sx={{ position: 'fixed',\n//               bottom: 110,  // Distance from bottom\n//               right: 40,    // Distance from left side\n//               zIndex: 1000,  // Ensure the button is above other content\n//           }}>\n//             <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>\n//       </Box>\n//       {/* Second Section (30%) */}\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n// export default Extract;\n\nimport { Box, Typography, Button, Fab, Popover } from \"@mui/material\";\nimport Chatbot from \"../components/Chatbot\";\nimport MarketTable from \"../components/MarketTable\";\nimport Axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Extract() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const extractedDocs = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.docs) || [];\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\n  const [existingData, setExistingData] = useState([]);\n  const [extractedData, setExtractedData] = useState([]);\n  const [chatQuery, setChatQuery] = useState([]);\n  const [anchorEl, setAnchorEl] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    fetchDatas(companyIds);\n  }, []);\n  const fetchDatas = async input => {\n    try {\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", {\n        company_ids: input\n      });\n      setExtractedData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleChatSubmit = async input => {\n    setChatQuery(input);\n    try {\n      const inputObject = {\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n        query: input\n      };\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n      //   setHeaders(Object.keys(response.data.body.companies[0]))\n      //   setApiData(response.data.body.companies);\n      console.log(response.data);\n      //   setExistingData(response.data.body.companies)\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleFabClick = event => {\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"fab-popover\" : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"85vh\",\n      padding: 2,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 8,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          display: \"flex\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(MarketTable, {\n          data: existingData,\n          title: \"\",\n          id: \"view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarketTable, {\n          data: Object.entries(extractedData).map(([companyId, data]) => ({\n            companyId,\n            ...data\n          })),\n          title: \"\",\n          id: \"extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"primary\",\n        onClick: handleFabClick,\n        sx: {\n          position: 'fixed',\n          bottom: 110,\n          right: 40,\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(QuestionAnswerRoundedIcon, {\n          titleAccess: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        id: id,\n        open: open,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'center',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'center',\n          horizontal: 'right'\n        },\n        sx: {\n          marginRight: 2,\n          borderRadius: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: 2,\n            width: '500px',\n            height: '600px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Popup Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"This is the popup that appears to the left of the Fab.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 2,\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        onChatSubmit: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n_s(Extract, \"OkpFqxvlykzmMT5bKbsRjMHDHbA=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Extract;\nexport default Extract;\nvar _c;\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"names":["Box","Typography","Button","Fab","Popover","Chatbot","MarketTable","Axios","useLocation","useNavigate","QuestionAnswerRoundedIcon","useState","useEffect","jsxDEV","_jsxDEV","Extract","_s","_location$state","location","navigate","extractedDocs","state","docs","companyIds","map","doc","Company_ID","existingData","setExistingData","extractedData","setExtractedData","chatQuery","setChatQuery","anchorEl","setAnchorEl","fetchData","response","get","Array","isArray","data","body","companies","console","warn","error","fetchDatas","input","post","company_ids","handleChatSubmit","inputObject","company_id","JSON","parse","sessionStorage","getItem","companyId","query","log","handleFabClick","event","currentTarget","handleClose","open","Boolean","id","undefined","sx","height","padding","display","flexDirection","children","flex","gap","title","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","color","onClick","position","bottom","right","zIndex","titleAccess","onClose","anchorOrigin","vertical","horizontal","transformOrigin","marginRight","borderRadius","width","variant","marginTop","onChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["// import { Box, Typography, Button, Fab } from \"@mui/material\";\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import Card from \"../layouts/cards\";\r\n// import { useState, useEffect } from \"react\";\r\n// import Cards from \"../layouts/cards\";\r\n// import DocumentCard from \"../layouts/cards\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   // Extracting the docs array from the location state\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [expanded, setExpanded] = useState(false);\r\n//   const [showDoc, setShowDoc] = useState(false);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState([]);\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n//           //   setApiData(response.data.body.companies);\r\n//           setExistingData(response.data.body.companies)\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds)\r\n//   }, []);\r\n\r\n\r\n//   const companyArray = Object.entries(extractedData).map(([companyId, data]) => ({\r\n//     companyId,\r\n//     ...data\r\n//   }));\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data)\r\n//       console.log(response)\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     const companys = JSON.parse(sessionStorage.getItem(\"rows\"))\r\n//     // navigate('/analyze', { state: { docs: {company_id: companys[0].companyId, query: input} } }); \r\n//     // Axios api with analyze format\r\n//   };\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       {/* <Typography variant=\"h5\">Extract</Typography> */}\r\n//       {/* First Section (70%) */}\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           {/* Left Section */}\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\"/>\r\n//           <MarketTable data={companyArray} title=\"\" id=\"extract\"/>\r\n//         </Box>\r\n\r\n//         <Fab color=\"primary\" onClick={() => {}} sx={{ position: 'fixed',\r\n//               bottom: 110,  // Distance from bottom\r\n//               right: 40,    // Distance from left side\r\n//               zIndex: 1000,  // Ensure the button is above other content\r\n//           }}>\r\n//             <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>\r\n//       </Box>\r\n//       {/* Second Section (30%) */}\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n// export default Extract;\r\n\r\n\r\nimport { Box, Typography, Button, Fab, Popover } from \"@mui/material\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport MarketTable from \"../components/MarketTable\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction Extract() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const extractedDocs = location.state?.docs || [];\r\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n  const [existingData, setExistingData] = useState([]);\r\n  const [extractedData, setExtractedData] = useState([]);\r\n  const [chatQuery, setChatQuery] = useState([]);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n        if (Array.isArray(response.data.body.companies)) {\r\n          setExistingData(response.data.body.companies);\r\n        } else {\r\n          console.warn(\"API returned an empty array or unexpected data format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n    fetchDatas(companyIds);\r\n  }, []);\r\n\r\n  const fetchDatas = async (input) => {\r\n    try {\r\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n      setExtractedData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChatSubmit = async (input) => {\r\n    setChatQuery(input);\r\n    try {\r\n      const inputObject = {\r\n        company_id : JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n        query : input\r\n      }\r\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n        //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n        //   setApiData(response.data.body.companies);\r\n        console.log(response.data)\r\n      //   setExistingData(response.data.body.companies)\r\n      \r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFabClick = (event) => {\r\n    setAnchorEl(anchorEl ? null : event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"fab-popover\" : undefined;\r\n\r\n  return (\r\n    <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n          <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n          <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n        </Box>\r\n\r\n        <Fab color=\"primary\" onClick={handleFabClick} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n          <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n        </Fab>\r\n\r\n        {/* Popover positioned to the left of Fab */}\r\n        <Popover \r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n          transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n          sx={{ marginRight: 2, borderRadius: 20 }}\r\n        >\r\n          <Box sx={{ padding: 2, width: '500px', height: '600px' }}>\r\n            <Typography variant=\"h6\">Popup Content</Typography>\r\n            <Typography variant=\"body2\">This is the popup that appears to the left of the Fab.</Typography>\r\n          </Box>\r\n        </Popover>\r\n      </Box>\r\n      <Box sx={{ flex: 2, marginTop: 2 }}>\r\n        <Chatbot onChatSubmit={handleChatSubmit} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Extract;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}