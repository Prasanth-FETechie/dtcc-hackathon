{"ast":null,"code":"/**\r\n * Combines the two get*Props functions from Base UI hooks into one.\r\n * Useful when a hook uses two other hooks behind the scenes\r\n * (such as useSelect that depends on useList and useButton for its root slot).\r\n *\r\n * The resulting function will return the combined props.\r\n * They are merged from left to right, similarly to how Object.assign works.\r\n *\r\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\r\n * so its event handlers can call the previous handlers and act depending on its result.\r\n *\r\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\r\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\r\n */\nexport function combineHooksSlotProps(getFirstProps, getSecondProps) {\n  return function getCombinedProps(external = {}) {\n    const firstResult = {\n      ...external,\n      ...getFirstProps(external)\n    };\n    const result = {\n      ...firstResult,\n      ...getSecondProps(firstResult)\n    };\n    return result;\n  };\n}","map":{"version":3,"names":["combineHooksSlotProps","getFirstProps","getSecondProps","getCombinedProps","external","firstResult","result"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/node_modules/@mui/base/utils/combineHooksSlotProps.js"],"sourcesContent":["/**\r\n * Combines the two get*Props functions from Base UI hooks into one.\r\n * Useful when a hook uses two other hooks behind the scenes\r\n * (such as useSelect that depends on useList and useButton for its root slot).\r\n *\r\n * The resulting function will return the combined props.\r\n * They are merged from left to right, similarly to how Object.assign works.\r\n *\r\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\r\n * so its event handlers can call the previous handlers and act depending on its result.\r\n *\r\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\r\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\r\n */\r\nexport function combineHooksSlotProps(getFirstProps, getSecondProps) {\r\n  return function getCombinedProps(external = {}) {\r\n    const firstResult = {\r\n      ...external,\r\n      ...getFirstProps(external)\r\n    };\r\n    const result = {\r\n      ...firstResult,\r\n      ...getSecondProps(firstResult)\r\n    };\r\n    return result;\r\n  };\r\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAqBA,CAACC,aAAa,EAAEC,cAAc,EAAE;EACnE,OAAO,SAASC,gBAAgBA,CAACC,QAAQ,GAAG,CAAC,CAAC,EAAE;IAC9C,MAAMC,WAAW,GAAG;MAClB,GAAGD,QAAQ;MACX,GAAGH,aAAa,CAACG,QAAQ;IAC3B,CAAC;IACD,MAAME,MAAM,GAAG;MACb,GAAGD,WAAW;MACd,GAAGH,cAAc,CAACG,WAAW;IAC/B,CAAC;IACD,OAAOC,MAAM;EACf,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}