{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinee\\\\OneDrive\\\\Desktop\\\\DTCC Hackathon\\\\dtcc-ai-ui\\\\dtcc-hackathon\\\\src\\\\views\\\\Extract.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport Chatbot from \"../components/Chatbot\";\nimport MarketTable from \"../components/MarketTable\";\nimport Axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Extract() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const extractedDocs = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.docs) || [];\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\n  const [existingData, setExistingData] = useState([]);\n  const [extractedData, setExtractedData] = useState([]);\n  const [chatQuery, setChatQuery] = useState(\"\");\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [responseDataList, setResponseDataList] = useState([]);\n  const [expandedCards, setExpandedCards] = useState({});\n  const fabRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    fetchDatas(companyIds);\n  }, []);\n  const fetchDatas = async input => {\n    try {\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", {\n        company_ids: input\n      });\n      setExtractedData(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleChatSubmit = async input => {\n    setChatQuery(input);\n    try {\n      const inputObject = {\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n        query: input\n      };\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n      setResponseDataList(prevList => [...prevList, {\n        query: input,\n        data: response.data\n      }]);\n      setAnchorEl(fabRef.current);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const toggleExpand = index => {\n    setExpandedCards(prevState => ({\n      ...prevState,\n      [index]: !prevState[index]\n    }));\n  };\n  const open = Boolean(anchorEl);\n  const id = open ? \"fab-popover\" : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: \"85vh\",\n      padding: 2,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 8,\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          display: \"flex\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(MarketTable, {\n          data: existingData,\n          title: \"\",\n          id: \"view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarketTable, {\n          data: Object.entries(extractedData).map(([companyId, data]) => ({\n            companyId,\n            ...data\n          })),\n          title: \"\",\n          id: \"extract\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), responseDataList.length > 0 && /*#__PURE__*/_jsxDEV(Fab, {\n        ref: fabRef,\n        color: \"primary\",\n        onClick: () => setAnchorEl(fabRef.current),\n        sx: {\n          position: 'fixed',\n          bottom: 110,\n          right: 40,\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(QuestionAnswerRoundedIcon, {\n          titleAccess: \"Analyze\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        id: id,\n        open: open,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'center',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'center',\n          horizontal: 'right'\n        },\n        sx: {\n          marginRight: 2,\n          borderRadius: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            padding: 2,\n            width: '650px',\n            height: '600px',\n            overflowY: 'auto',\n            background: \"#edf6f9\"\n          },\n          children: responseDataList.map((responseItem, index) => /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              marginBottom: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: responseItem.query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: responseItem.data.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              sx: {\n                justifyContent: \"flex-end\"\n              },\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => toggleExpand(index),\n                children: expandedCards[index] ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: expandedCards[index],\n              timeout: \"auto\",\n              unmountOnExit: true,\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: responseItem.data.documents.map((doc, docIndex) => /*#__PURE__*/_jsxDEV(Card, {\n                  sx: {\n                    padding: 1,\n                    margin: 1,\n                    boxShadow: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    fontWeight: \"bold\",\n                    children: doc.metadata.Document_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    align: \"right\",\n                    children: doc.metadata.Company_Name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => toggleDocExpand(docIndex),\n                    children: expandedDocs[docIndex] ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 54\n                    }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 75\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                    in: expandedDocs[docIndex],\n                    timeout: \"auto\",\n                    unmountOnExit: true,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      children: doc.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 28\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      sx: {\n                        color: 'blue',\n                        float: 'right'\n                      },\n                      href: doc.metadata._source_uri,\n                      target: \"_blank\",\n                      children: doc.metadata.Document_Type === \"CONCALL\" ? /*#__PURE__*/_jsxDEV(AudiotrackOutlinedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 73\n                      }, this) : doc.metadata.Document_Type === \"WEB\" ? /*#__PURE__*/_jsxDEV(LanguageOutlinedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 141\n                      }, this) : /*#__PURE__*/_jsxDEV(PictureAsPdfOutlinedIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 128,\n                        columnNumber: 168\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 28\n                    }, this), \"//                         \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this), \"//                       \"]\n                }, docIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 24\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 2,\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Chatbot, {\n        onChatSubmit: handleChatSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Extract, \"jbaAfVUeMebR0rVsNh568lMx4v4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Extract;\nexport default Extract;\n\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n// import ExpandLessIcon from '@mui/icons-material/ExpandLess';\n// import AudiotrackOutlinedIcon from '@mui/icons-material/AudiotrackOutlined';\n// import LanguageOutlinedIcon from '@mui/icons-material/LanguageOutlined';\n// import PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\n// import Chatbot from \"../components/Chatbot\";\n// import MarketTable from \"../components/MarketTable\";\n// import Axios from \"axios\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\n// import { useState, useEffect, useRef } from \"react\";\n\n// function Extract() {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const extractedDocs = location.state?.docs || [];\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\n//   const [existingData, setExistingData] = useState([]);\n//   const [extractedData, setExtractedData] = useState([]);\n//   const [chatQuery, setChatQuery] = useState(\"\");\n//   const [anchorEl, setAnchorEl] = useState(null);\n//   const [responseDataList, setResponseDataList] = useState([]);\n//   const [expandedCards, setExpandedCards] = useState({});\n//   const [expandedDocs, setExpandedDocs] = useState({});\n//   const fabRef = useRef(null);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n//         if (Array.isArray(response.data.body.companies)) {\n//           setExistingData(response.data.body.companies);\n//         } else {\n//           console.warn(\"API returned an empty array or unexpected data format\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error fetching data:\", error);\n//       }\n//     };\n//     fetchData();\n//     fetchDatas(companyIds);\n//   }, []);\n\n//   const fetchDatas = async (input) => {\n//     try {\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\n//       setExtractedData(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleChatSubmit = async (input) => {\n//     setChatQuery(input);\n//     try {\n//       const inputObject = {\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\n//         query: input\n//       };\n\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\n//       setAnchorEl(fabRef.current);\n//     } catch (error) {\n//       console.error(\"Error fetching data:\", error);\n//     }\n//   };\n\n//   const handleClose = () => {\n//     setAnchorEl(null);\n//   };\n\n//   const toggleExpand = (index) => {\n//     setExpandedCards(prevState => ({\n//       ...prevState,\n//       [index]: !prevState[index]\n//     }));\n//   };\n\n//   const toggleDocExpand = (index) => {\n//     setExpandedDocs(prevState => ({\n//       ...prevState,\n//       [index]: !prevState[index]\n//     }));\n//   };\n\n//   const open = Boolean(anchorEl);\n//   const id = open ? \"fab-popover\" : undefined;\n\n//   return (\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\n//         </Box>\n//         {responseDataList.length > 0 && <Fab ref={fabRef} color=\"primary\" sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\n//         </Fab>}\n//         <Popover id={id} open={open} anchorEl={anchorEl} onClose={handleClose} anchorOrigin={{ vertical: 'center', horizontal: 'left' }} transformOrigin={{ vertical: 'center', horizontal: 'right' }} sx={{ marginRight: 2, borderRadius: 20 }}>\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\n//             {responseDataList.map((responseItem, index) => (\n//               <Card key={index} sx={{ marginBottom: 2 }}>\n//                 <CardHeader title={responseItem.query} />\n//                 <CardContent>\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\n//                 </CardContent>\n//                 <CardActions>\n//                   <IconButton onClick={() => toggleExpand(index)}>\n//                     {expandedCards[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n//                   </IconButton>\n//                 </CardActions>\n//                 <Collapse in={expandedCards[index]} timeout=\"auto\" unmountOnExit>\n//                   <CardContent>\n//                     {responseItem.data.documents.map((doc, docIndex) => (\n//                       <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2 }}>\n//                         <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\n//                         <Typography variant=\"caption\" align=\"right\">{doc.metadata.Company_Name}</Typography>\n//                         <IconButton onClick={() => toggleDocExpand(docIndex)}>\n//                           {expandedDocs[docIndex] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n//                         </IconButton>\n//                         <Collapse in={expandedDocs[docIndex]} timeout=\"auto\" unmountOnExit>\n//                           <Typography variant=\"body2\">{doc.content}</Typography>\n//                           <IconButton sx={{ color: 'blue', float: 'right' }} href={doc.metadata._source_uri} target=\"_blank\">\n//                             {doc.metadata.Document_Type === \"CONCALL\" ? <AudiotrackOutlinedIcon /> : doc.metadata.Document_Type === \"WEB\" ? <LanguageOutlinedIcon /> : <PictureAsPdfOutlinedIcon />}\n//                           </IconButton>\n//                         </Collapse>\n//                       </Card>\n//                     ))}\n//                   </CardContent>\n//                 </Collapse>\n//               </Card>\n//             ))}\n//           </Box>\n//         </Popover>\n//       </Box>\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\n//         <Chatbot onChatSubmit={handleChatSubmit} />\n//       </Box>\n//     </Box>\n//   );\n// }\n// export default Extract;\nvar _c;\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"names":["Box","Typography","Button","Fab","Popover","Card","CardHeader","CardContent","CardActions","IconButton","Collapse","Divider","ExpandMoreIcon","ExpandLessIcon","Chatbot","MarketTable","Axios","useLocation","useNavigate","QuestionAnswerRoundedIcon","useState","useEffect","useRef","jsxDEV","_jsxDEV","Extract","_s","_location$state","location","navigate","extractedDocs","state","docs","companyIds","map","doc","Company_ID","existingData","setExistingData","extractedData","setExtractedData","chatQuery","setChatQuery","anchorEl","setAnchorEl","responseDataList","setResponseDataList","expandedCards","setExpandedCards","fabRef","fetchData","response","get","Array","isArray","data","body","companies","console","warn","error","fetchDatas","input","post","company_ids","handleChatSubmit","inputObject","company_id","JSON","parse","sessionStorage","getItem","companyId","query","prevList","current","handleClose","toggleExpand","index","prevState","open","Boolean","id","undefined","sx","height","padding","display","flexDirection","children","flex","gap","title","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","length","ref","color","onClick","position","bottom","right","zIndex","titleAccess","onClose","anchorOrigin","vertical","horizontal","transformOrigin","marginRight","borderRadius","width","overflowY","background","responseItem","marginBottom","variant","answer","justifyContent","in","timeout","unmountOnExit","documents","docIndex","margin","boxShadow","fontWeight","metadata","Document_Name","align","Company_Name","toggleDocExpand","expandedDocs","content","float","href","_source_uri","target","Document_Type","AudiotrackOutlinedIcon","LanguageOutlinedIcon","PictureAsPdfOutlinedIcon","marginTop","onChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/vinee/OneDrive/Desktop/DTCC Hackathon/dtcc-ai-ui/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport MarketTable from \"../components/MarketTable\";\r\nimport Axios from \"axios\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nfunction Extract() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const extractedDocs = location.state?.docs || [];\r\n  const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n  const [existingData, setExistingData] = useState([]);\r\n  const [extractedData, setExtractedData] = useState([]);\r\n  const [chatQuery, setChatQuery] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [responseDataList, setResponseDataList] = useState([]);\r\n  const [expandedCards, setExpandedCards] = useState({});\r\n  const fabRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n        if (Array.isArray(response.data.body.companies)) {\r\n          setExistingData(response.data.body.companies);\r\n        } else {\r\n          console.warn(\"API returned an empty array or unexpected data format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n    fetchDatas(companyIds);\r\n  }, []);\r\n\r\n  const fetchDatas = async (input) => {\r\n    try {\r\n      const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n      setExtractedData(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleChatSubmit = async (input) => {\r\n    setChatQuery(input);\r\n    try {\r\n      const inputObject = {\r\n        company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n        query: input\r\n      };\r\n      \r\n      const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n      setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n      setAnchorEl(fabRef.current);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const toggleExpand = (index) => {\r\n    setExpandedCards(prevState => ({\r\n      ...prevState,\r\n      [index]: !prevState[index]\r\n    }));\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"fab-popover\" : undefined;\r\n\r\n  return (\r\n    <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n        <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n          <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n          <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n        </Box>\r\n\r\n        { responseDataList.length > 0 && <Fab ref={fabRef} color=\"primary\" onClick={() => setAnchorEl(fabRef.current)} sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n          <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n        </Fab>}\r\n\r\n        {/* Popover containing response cards */}\r\n        <Popover \r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\r\n          transformOrigin={{ vertical: 'center', horizontal: 'right' }}\r\n          sx={{ marginRight: 2, borderRadius: 20 }}\r\n        >\r\n          <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\r\n            {responseDataList.map((responseItem, index) => (\r\n              <Card key={index} sx={{ marginBottom: 2 }}>\r\n                <CardHeader title={responseItem.query} />\r\n                <Divider />\r\n                <CardContent>\r\n                  <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n                </CardContent>\r\n                <CardActions sx={{ justifyContent: \"flex-end\" }}>\r\n                  <IconButton onClick={() => toggleExpand(index)}>\r\n                    {expandedCards[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                  </IconButton>\r\n                </CardActions>\r\n                <Divider />\r\n                <Collapse in={expandedCards[index]} timeout=\"auto\" unmountOnExit>\r\n                  <CardContent>\r\n                    {responseItem.data.documents.map((doc, docIndex) => (\r\n                       <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2 }}>\r\n                          <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n                          <Typography variant=\"caption\" align=\"right\">{doc.metadata.Company_Name}</Typography>\r\n                          <IconButton onClick={() => toggleDocExpand(docIndex)}>\r\n                           {expandedDocs[docIndex] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n                          </IconButton>\r\n                        <Collapse in={expandedDocs[docIndex]} timeout=\"auto\" unmountOnExit>\r\n                           <Typography variant=\"body2\">{doc.content}</Typography>\r\n                           <IconButton sx={{ color: 'blue', float: 'right' }} href={doc.metadata._source_uri} target=\"_blank\">\r\n                            {doc.metadata.Document_Type === \"CONCALL\" ? <AudiotrackOutlinedIcon /> : doc.metadata.Document_Type === \"WEB\" ? <LanguageOutlinedIcon /> : <PictureAsPdfOutlinedIcon />}\r\n                          </IconButton>\r\n                       //                         </Collapse>\r\n                       //                       </Card>\r\n                    ))}\r\n                  </CardContent>\r\n                </Collapse>\r\n              </Card>\r\n            ))}\r\n          </Box>\r\n        </Popover>\r\n      </Box>\r\n      <Box sx={{ flex: 2, marginTop: 2 }}>\r\n        <Chatbot onChatSubmit={handleChatSubmit} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Extract;\r\n\r\n\r\n\r\n\r\n// import { Box, Typography, Button, Fab, Popover, Card, CardHeader, CardContent, CardActions, IconButton, Collapse, Divider } from \"@mui/material\";\r\n// import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n// import ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n// import AudiotrackOutlinedIcon from '@mui/icons-material/AudiotrackOutlined';\r\n// import LanguageOutlinedIcon from '@mui/icons-material/LanguageOutlined';\r\n// import PictureAsPdfOutlinedIcon from '@mui/icons-material/PictureAsPdfOutlined';\r\n// import Chatbot from \"../components/Chatbot\";\r\n// import MarketTable from \"../components/MarketTable\";\r\n// import Axios from \"axios\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import QuestionAnswerRoundedIcon from '@mui/icons-material/QuestionAnswerRounded';\r\n// import { useState, useEffect, useRef } from \"react\";\r\n\r\n// function Extract() {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const extractedDocs = location.state?.docs || [];\r\n//   const companyIds = extractedDocs.map(doc => doc.Company_ID);\r\n//   const [existingData, setExistingData] = useState([]);\r\n//   const [extractedData, setExtractedData] = useState([]);\r\n//   const [chatQuery, setChatQuery] = useState(\"\");\r\n//   const [anchorEl, setAnchorEl] = useState(null);\r\n//   const [responseDataList, setResponseDataList] = useState([]);\r\n//   const [expandedCards, setExpandedCards] = useState({});\r\n//   const [expandedDocs, setExpandedDocs] = useState({});\r\n//   const fabRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n//         if (Array.isArray(response.data.body.companies)) {\r\n//           setExistingData(response.data.body.companies);\r\n//         } else {\r\n//           console.warn(\"API returned an empty array or unexpected data format\");\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching data:\", error);\r\n//       }\r\n//     };\r\n//     fetchData();\r\n//     fetchDatas(companyIds);\r\n//   }, []);\r\n\r\n//   const fetchDatas = async (input) => {\r\n//     try {\r\n//       const response = await Axios.post(\"https://jw3yqvwye0.execute-api.us-west-2.amazonaws.com/def\", { company_ids: input });\r\n//       setExtractedData(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChatSubmit = async (input) => {\r\n//     setChatQuery(input);\r\n//     try {\r\n//       const inputObject = {\r\n//         company_id: JSON.parse(sessionStorage.getItem('rows'))[0].companyId,\r\n//         query: input\r\n//       };\r\n      \r\n//       const response = await Axios.post(\"https://klswll0tw9.execute-api.us-west-2.amazonaws.com/dev\", inputObject);\r\n//       setResponseDataList(prevList => [...prevList, { query: input, data: response.data }]);\r\n//       setAnchorEl(fabRef.current);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching data:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleClose = () => {\r\n//     setAnchorEl(null);\r\n//   };\r\n\r\n//   const toggleExpand = (index) => {\r\n//     setExpandedCards(prevState => ({\r\n//       ...prevState,\r\n//       [index]: !prevState[index]\r\n//     }));\r\n//   };\r\n\r\n//   const toggleDocExpand = (index) => {\r\n//     setExpandedDocs(prevState => ({\r\n//       ...prevState,\r\n//       [index]: !prevState[index]\r\n//     }));\r\n//   };\r\n\r\n//   const open = Boolean(anchorEl);\r\n//   const id = open ? \"fab-popover\" : undefined;\r\n\r\n//   return (\r\n//     <Box sx={{ height: \"85vh\", padding: 2, display: \"flex\", flexDirection: \"column\" }}>\r\n//       <Box sx={{ flex: 8, display: \"flex\", flexDirection: \"column\" }}>\r\n//         <Box sx={{ flex: 1, display: \"flex\", gap: 2 }}>\r\n//           <MarketTable data={existingData} title=\"\" id=\"view\" />\r\n//           <MarketTable data={Object.entries(extractedData).map(([companyId, data]) => ({ companyId, ...data }))} title=\"\" id=\"extract\" />\r\n//         </Box>\r\n//         {responseDataList.length > 0 && <Fab ref={fabRef} color=\"primary\" sx={{ position: 'fixed', bottom: 110, right: 40, zIndex: 1000 }}>\r\n//           <QuestionAnswerRoundedIcon titleAccess=\"Analyze\" />\r\n//         </Fab>}\r\n//         <Popover id={id} open={open} anchorEl={anchorEl} onClose={handleClose} anchorOrigin={{ vertical: 'center', horizontal: 'left' }} transformOrigin={{ vertical: 'center', horizontal: 'right' }} sx={{ marginRight: 2, borderRadius: 20 }}>\r\n//           <Box sx={{ padding: 2, width: '650px', height: '600px', overflowY: 'auto', background: \"#edf6f9\" }}>\r\n//             {responseDataList.map((responseItem, index) => (\r\n//               <Card key={index} sx={{ marginBottom: 2 }}>\r\n//                 <CardHeader title={responseItem.query} />\r\n//                 <CardContent>\r\n//                   <Typography variant=\"body2\">{responseItem.data.answer}</Typography>\r\n//                 </CardContent>\r\n//                 <CardActions>\r\n//                   <IconButton onClick={() => toggleExpand(index)}>\r\n//                     {expandedCards[index] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n//                   </IconButton>\r\n//                 </CardActions>\r\n//                 <Collapse in={expandedCards[index]} timeout=\"auto\" unmountOnExit>\r\n//                   <CardContent>\r\n//                     {responseItem.data.documents.map((doc, docIndex) => (\r\n//                       <Card key={docIndex} sx={{ padding: 1, margin: 1, boxShadow: 2 }}>\r\n//                         <Typography variant=\"body2\" fontWeight=\"bold\">{doc.metadata.Document_Name}</Typography>\r\n//                         <Typography variant=\"caption\" align=\"right\">{doc.metadata.Company_Name}</Typography>\r\n//                         <IconButton onClick={() => toggleDocExpand(docIndex)}>\r\n//                           {expandedDocs[docIndex] ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n//                         </IconButton>\r\n//                         <Collapse in={expandedDocs[docIndex]} timeout=\"auto\" unmountOnExit>\r\n//                           <Typography variant=\"body2\">{doc.content}</Typography>\r\n//                           <IconButton sx={{ color: 'blue', float: 'right' }} href={doc.metadata._source_uri} target=\"_blank\">\r\n//                             {doc.metadata.Document_Type === \"CONCALL\" ? <AudiotrackOutlinedIcon /> : doc.metadata.Document_Type === \"WEB\" ? <LanguageOutlinedIcon /> : <PictureAsPdfOutlinedIcon />}\r\n//                           </IconButton>\r\n//                         </Collapse>\r\n//                       </Card>\r\n//                     ))}\r\n//                   </CardContent>\r\n//                 </Collapse>\r\n//               </Card>\r\n//             ))}\r\n//           </Box>\r\n//         </Popover>\r\n//       </Box>\r\n//       <Box sx={{ flex: 2, marginTop: 2 }}>\r\n//         <Chatbot onChatSubmit={handleChatSubmit} />\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// }\r\n// export default Extract;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}