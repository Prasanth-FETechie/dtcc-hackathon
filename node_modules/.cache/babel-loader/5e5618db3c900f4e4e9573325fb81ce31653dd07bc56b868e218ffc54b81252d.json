{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patna\\\\NewGit\\\\dtcc-hackathon\\\\src\\\\views\\\\Extract.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Typography, Button } from \"@mui/material\";\nimport Chatbot from \"../components/Chatbot\";\nimport Card from \"../layouts/cards\";\nimport { useState } from \"react\";\nimport Cards from \"../layouts/cards\";\nimport DocumentCard from \"../layouts/cards\";\nimport MarketTable from \"../components/MarketTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Extract() {\n  _s();\n  const [expanded, setExpanded] = useState(false);\n  const [showDoc, setShowDoc] = useState(false);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [existingData, setExistingData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\n        if (Array.isArray(response.data.body.companies)) {\n          //   setHeaders(Object.keys(response.data.body.companies[0]))\n          //   setApiData(response.data.body.companies);\n          setExistingData(response.data.body.companies);\n        } else {\n          console.warn(\"API returned an empty array or unexpected data format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n    // console.log(headers);\n    // console.log(apiData);\n  }, []);\n  const toggleExpand = () => {\n    setExpanded(!expanded);\n  };\n  const handleChatSubmit = async input => {\n    console.log(input);\n  };\n  const handleSelect = doc => {\n    setSelectedDocs(prevState => prevState.includes(doc) ? prevState.filter(item => item !== doc) : [...prevState, doc]);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      children: \"Extract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarketTable, {\n      data: existingData,\n      title: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {\n      from: \"extract\",\n      onChatSubmit: handleChatSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Extract, \"exeEDgJTT34x0FTjNMivJB04l40=\");\n_c = Extract;\nexport default Extract;\nvar _c;\n$RefreshReg$(_c, \"Extract\");","map":{"version":3,"names":["Box","Typography","Button","Chatbot","Card","useState","Cards","DocumentCard","MarketTable","jsxDEV","_jsxDEV","Extract","_s","expanded","setExpanded","showDoc","setShowDoc","selectedDocs","setSelectedDocs","existingData","setExistingData","useEffect","fetchData","response","Axios","get","Array","isArray","data","body","companies","console","warn","error","toggleExpand","handleChatSubmit","input","log","handleSelect","doc","prevState","includes","filter","item","sx","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","title","from","onChatSubmit","_c","$RefreshReg$"],"sources":["C:/Users/patna/NewGit/dtcc-hackathon/src/views/Extract.jsx"],"sourcesContent":["import { Box, Typography, Button } from \"@mui/material\";\r\nimport Chatbot from \"../components/Chatbot\";\r\nimport Card from \"../layouts/cards\";\r\nimport { useState } from \"react\";\r\nimport Cards from \"../layouts/cards\";\r\nimport DocumentCard from \"../layouts/cards\";\r\nimport MarketTable from \"../components/MarketTable\";\r\n\r\nfunction Extract() {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [showDoc, setShowDoc] = useState(false);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n  const [existingData, setExistingData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await Axios.get(\"https://47l1w34bw5.execute-api.us-west-2.amazonaws.com/dataTest\");\r\n            if (Array.isArray(response.data.body.companies)) {\r\n                //   setHeaders(Object.keys(response.data.body.companies[0]))\r\n                //   setApiData(response.data.body.companies);\r\n                setExistingData(response.data.body.companies)\r\n            } else {\r\n                console.warn(\"API returned an empty array or unexpected data format\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n    // console.log(headers);\r\n    // console.log(apiData);\r\n}, []);\r\n  const toggleExpand = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const handleChatSubmit = async (input) => {\r\n    console.log(input);\r\n  };\r\n  const handleSelect = (doc) => {\r\n    setSelectedDocs((prevState) =>\r\n      prevState.includes(doc) ? prevState.filter(item => item !== doc) : [...prevState, doc]\r\n    );\r\n  };\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h5\">Extract</Typography>\r\n      <MarketTable data={existingData} title=\"\" />\r\n      <Chatbot from=\"extract\" onChatSubmit={handleChatSubmit} />\r\n    </Box>\r\n  );\r\n}\r\nexport default Extract;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}